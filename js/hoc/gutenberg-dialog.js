/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

(function (DrupalGutenberg, $) {
  var MediaBrowser = DrupalGutenberg.Components.MediaBrowser;


  var withGutenbergDialog = function withGutenbergDialog(Component) {
    var onDialogCreate = function onDialogCreate(element) {
      var $buttons = $(element).find('.form-actions');
      var $dialogButtons = $buttons.closest('.ui-dialog').find('.ui-dialog-buttonpane');

      $dialogButtons.empty();
      $dialogButtons.append($buttons);
    };

    var getDialog = function getDialog(_ref) {
      var allowedTypes = _ref.allowedTypes,
          _onSelect = _ref.onSelect;

      return new Promise(function (resolve) {
        resolve({
          component: function component(props) {
            return React.createElement(MediaBrowser, _extends({}, props, {
              allowedTypes: allowedTypes,
              value: [],
              onSelect: function onSelect(media) {
                props.onSelect(props.multiple ? media : media[0]);
                _onSelect();
              } }));
          }
        });
      });
    };

    return function (props) {
      return React.createElement(Component, _extends({}, props, {
        onDialogCreate: onDialogCreate,
        getDialog: getDialog
      }));
    };
  };

  window.DrupalGutenberg = window.DrupalGutenberg || {};
  window.DrupalGutenberg.Components = window.DrupalGutenberg.Components || {};
  window.DrupalGutenberg.Components.withGutenbergDialog = withGutenbergDialog;
})(DrupalGutenberg, jQuery);