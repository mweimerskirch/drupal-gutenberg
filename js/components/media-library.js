/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

(function (wp, Drupal) {
  var element = wp.element,
      components = wp.components;
  var Button = components.Button;
  var Component = element.Component;

  var __ = Drupal.t;

  var MediaLibrary = function (_Component) {
    _inherits(MediaLibrary, _Component);

    function MediaLibrary() {
      _classCallCheck(this, MediaLibrary);

      var _this = _possibleConstructorReturn(this, (MediaLibrary.__proto__ || Object.getPrototypeOf(MediaLibrary)).apply(this, arguments));

      _this.openDialog = _this.openDialog.bind(_this);
      _this.closeDialog = _this.closeDialog.bind(_this);
      return _this;
    }

    _createClass(MediaLibrary, [{
      key: 'closeDialog',
      value: function closeDialog() {
        if (this.frame) {
          this.frame.close();
          delete this.frame;
        }
        if (this.mediaBrowserWrapper) {
          Drupal.detachBehaviors(this.mediaBrowserWrapper);
          this.mediaBrowserWrapper.remove();
          delete this.mediaBrowserWrapper;
        }
        this.props.onDialogClose && this.props.onDialogClose();
      }
    }, {
      key: 'openDialog',
      value: function openDialog() {
        var _this2 = this;

        var _props = this.props,
            _props$allowedTypes = _props.allowedTypes,
            allowedTypes = _props$allowedTypes === undefined ? [] : _props$allowedTypes,
            onDialogInsert = _props.onDialogInsert,
            onDialogCreate = _props.onDialogCreate,
            getDialog = _props.getDialog,
            multiple = _props.multiple;


        getDialog({
          allowedTypes: allowedTypes,
          onSelect: this.closeDialog
        }).then(function (result) {
          _this2.mediaBrowserWrapper = document.createElement('div');
          _this2.mediaBrowserWrapper.setAttribute('id', 'media-entity-browser-modal');

          element.render(React.createElement(result.component, _this2.props), _this2.mediaBrowserWrapper, function () {
            var _buttons;

            _this2.frame = Drupal.dialog(_this2.mediaBrowserWrapper, {
              title: __('Media library'),
              width: '95%',
              height: document.documentElement.clientHeight - 100,
              buttons: (_buttons = {}, _defineProperty(_buttons, __('Insert'), function () {
                onDialogInsert && onDialogInsert(_this2.mediaBrowserWrapper, _this2.props);
                _this2.closeDialog();
              }), _defineProperty(_buttons, __('Cancel'), _this2.closeDialog), _buttons),
              create: function create(event) {
                return onDialogCreate(event.target, multiple);
              },
              close: _this2.closeDialog
            });

            _this2.frame && _this2.frame.showModal();
            _this2.mediaBrowserWrapper && Drupal.attachBehaviors(_this2.mediaBrowserWrapper);
          });
        }).catch(function (reason) {
          return console.log('reason', reason);
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var render = this.props.render;


        if (render) {
          return render({ open: this.openDialog });
        }

        return React.createElement(
          Button,
          { isLarge: true,
            isDefault: true,
            title: __('Media Library'),
            onClick: this.openDialog },
          __('Media Library')
        );
      }
    }]);

    return MediaLibrary;
  }(Component);

  window.DrupalGutenberg = window.DrupalGutenberg || {};
  window.DrupalGutenberg.Components = window.DrupalGutenberg.Components || {};
  window.DrupalGutenberg.Components.MediaLibrary = MediaLibrary;
})(wp, Drupal, DrupalGutenberg, jQuery, drupalSettings);