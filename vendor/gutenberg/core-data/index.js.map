{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://wp/./node_modules/equivalent-key-map/equivalent-key-map.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/@wordpress/core-data/src/actions.js","webpack://wp/@wordpress/core-data/src/controls.js","webpack://wp/@wordpress/core-data/src/entities.js","webpack://wp/@wordpress/core-data/src/index.js","webpack://wp/@wordpress/core-data/src/name.js","webpack://wp/@wordpress/core-data/src/queried-data/actions.js","webpack://wp/@wordpress/core-data/src/queried-data/get-query-parts.js","webpack://wp/@wordpress/core-data/src/queried-data/index.js","webpack://wp/@wordpress/core-data/src/queried-data/reducer.js","webpack://wp/@wordpress/core-data/src/queried-data/selectors.js","webpack://wp/@wordpress/core-data/src/reducer.js","webpack://wp/@wordpress/core-data/src/resolvers.js","webpack://wp/@wordpress/core-data/src/selectors.js","webpack://wp/@wordpress/core-data/src/utils/conservative-map-item.js","webpack://wp/@wordpress/core-data/src/utils/if-matching-action.js","webpack://wp/@wordpress/core-data/src/utils/index.js","webpack://wp/@wordpress/core-data/src/utils/on-sub-key.js","webpack://wp/@wordpress/core-data/src/utils/replace-action.js","webpack://wp/@wordpress/core-data/src/utils/with-weak-map-cache.js","webpack://wp/external {\"this\":\"regeneratorRuntime\"}","webpack://wp/external {\"this\":[\"wp\",\"apiFetch\"]}","webpack://wp/external {\"this\":[\"wp\",\"data\"]}","webpack://wp/external {\"this\":[\"wp\",\"deprecated\"]}","webpack://wp/external {\"this\":[\"wp\",\"isShallowEqual\"]}","webpack://wp/external {\"this\":[\"wp\",\"url\"]}","webpack://wp/external {\"this\":\"lodash\"}"],"names":["editEntityRecord","undo","redo","saveEntityRecord","saveEditedEntityRecord","receiveUserQuery","queryID","users","type","castArray","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","map","record","status","title","action","receiveQueriedItems","receiveItems","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","edits","options","select","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","merge","isEqual","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","isAutosave","getKindEntities","entity","find","entityIdKey","DEFAULT_ENTITY_KEY","path","baseURL","persistedRecord","currentUserId","id","autosavePost","data","includes","get","apiFetch","method","updatedRecord","newRecord","receiveAutosaves","error","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves","request","selectorName","args","resolveSelect","controls","API_FETCH","triggerApiFetch","SELECT","createRegistryControl","registry","RESOLVE_SELECT","Promise","resolve","hasFinished","hasFinishedResolution","getResult","apply","result","unsubscribe","subscribe","loadPostTypeEntities","loadTaxonomyEntities","defaultEntities","plural","kinds","loadEntities","postTypes","postType","rest_base","blocks","taxonomies","taxonomy","getMethodName","prefix","usePlural","kindPrefix","upperFirst","camelCase","nameSuffix","suffix","length","kindConfig","entitySelectors","state","selectors","entityResolvers","resolvers","pluralMethodName","shouldInvalidate","entityActions","actions","registerStore","REDUCER_KEY","reducer","items","getQueryParts","parts","stableKey","page","perPage","sort","i","Number","addQueryArgs","slice","withWeakMapCache","getMergedItemIds","itemIds","nextItemIds","nextItemIdsStartIndex","size","Math","max","mergedItemIds","Array","isInNextItemsRange","itemId","conservativeMapItem","queries","flowRight","ifMatchingAction","replaceAction","onSubKey","combineReducers","queriedItemsCacheByState","WeakMap","getQueriedItemsUncached","startOffset","endOffset","min","push","getQueriedItems","createSelector","queriedItemsCache","queriedItems","EquivalentKeyMap","set","terms","byId","keyBy","user","entityConfig","queriedData","queriedDataReducer","nextState","nextEdits","forEach","saving","pending","entitiesConfig","newConfig","config","entitiesDataReducer","entitiesByKind","groupBy","entries","memo","subEntities","kindReducer","kindMemo","newData","UNDO_INITIAL_STATE","offset","some","flattenedUndo","pop","comparisonUndoEdits","values","filter","comparisonEdits","isShallowEqual","embedPreviews","userPermissions","autosavesData","getAuthors","getCurrentUser","getEntityRecord","getEntityRecords","getThemeSupports","getEmbedPreview","canUser","getAutosaves","getAutosave","context","activeThemes","theme_supports","embedProxyResponse","deprecated","alternative","resource","methods","create","read","update","delete","Error","parse","response","hasIn","allowHeader","headers","compact","join","restBase","isRequestingEmbedPreview","createRegistrySelector","isResolving","getUserQueryResults","queryResults","getEntitiesByKind","getEntity","getRawEntityRecord","_key","queriedState","getEntityRecordEdits","getEntityRecordNonTransientEdits","hasEditsForEntityRecord","getEditedEntityRecord","isAutosavingEntityRecord","Boolean","isSavingEntityRecord","getLastEntitySaveError","getCurrentUndoOffset","getUndoEdit","getRedoEdit","hasUndo","hasRedo","isPreviewEmbedFallback","oEmbedLinkCheck","html","defaultTo","authorId","author","hasFetchedAutosaves","getReferenceByDistinctEdits","item","nextItem","hasChanges","isMatch","actionProperty","nextKeyState","replacer","fn","cache","has","isObjectLike"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAe;AACf;AACA,iDAAiD,gBAAgB;AACjE;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,+BAA+B;AAC5E;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACxBA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAA;AAA8C;AAC/B;AACf,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,MAAM,+DAAc;AACpB,KAAK;AACL;;AAEA;AACA,C;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACY;AACV;AACjC;AACf,SAAS,+DAAc,SAAS,qEAAoB,YAAY,gEAAe;AAC/E,C;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACJ;AACI;AACrC;AACf,SAAS,kEAAiB,SAAS,gEAAe,SAAS,kEAAiB;AAC5E,C;;;;;;;;;;;;ACLa;;AAEb;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,EAAE;AACb;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;;AAEA;AACA;AACA,GAAG;;;AAGH,2CAA2C;;AAE3C;;AAEA,iBAAiB,uBAAuB;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA,mCAAmC;;AAEnC;;AAEA,qBAAqB,uBAAuB;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,GAAG;AACnB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,QAAQ;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,QAAQ;AACxB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,EAAE;AACjB;AACA;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;;;;;;;;;;;;AClTA;AAAa;;AAEb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uECxIgBA,gB;;;uEAmDAC,I;;;uEAkBAC,I;;;uEAsBAC,gB;;;uEAgIAC,sB;;AApWjB;;;AAGA;AAEA;;;;AAGA;AAIA;AACA;AAEA;;;;;;;;;AAQO,SAASC,gBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA4C;AAClD,SAAO;AACNC,QAAI,EAAE,oBADA;AAEND,SAAK,EAAEE,wDAAS,CAAEF,KAAF,CAFV;AAGND,WAAO,EAAPA;AAHM,GAAP;AAKA;AAED;;;;;;;;AAOO,SAASI,kBAAT,CAA6BC,WAA7B,EAA2C;AACjD,SAAO;AACNH,QAAI,EAAE,sBADA;AAENG,eAAW,EAAXA;AAFM,GAAP;AAIA;AAED;;;;;;;;AAOO,SAASC,WAAT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","file":"./build/core-data/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/core-data/build-module/index.js\");\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","'use strict';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * Given an instance of EquivalentKeyMap, returns its internal value pair tuple\n * for a key, if one exists. The tuple members consist of the last reference\n * value for the key (used in efficient subsequent lookups) and the value\n * assigned for the key at the leaf node.\n *\n * @param {EquivalentKeyMap} instance EquivalentKeyMap instance.\n * @param {*} key                     The key for which to return value pair.\n *\n * @return {?Array} Value pair, if exists.\n */\nfunction getValuePair(instance, key) {\n  var _map = instance._map,\n      _arrayTreeMap = instance._arrayTreeMap,\n      _objectTreeMap = instance._objectTreeMap; // Map keeps a reference to the last object-like key used to set the\n  // value, which can be used to shortcut immediately to the value.\n\n  if (_map.has(key)) {\n    return _map.get(key);\n  } // Sort keys to ensure stable retrieval from tree.\n\n\n  var properties = Object.keys(key).sort(); // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n  var map = Array.isArray(key) ? _arrayTreeMap : _objectTreeMap;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    map = map.get(property);\n\n    if (map === undefined) {\n      return;\n    }\n\n    var propertyValue = key[property];\n    map = map.get(propertyValue);\n\n    if (map === undefined) {\n      return;\n    }\n  }\n\n  var valuePair = map.get('_ekm_value');\n\n  if (!valuePair) {\n    return;\n  } // If reached, it implies that an object-like key was set with another\n  // reference, so delete the reference and replace with the current.\n\n\n  _map.delete(valuePair[0]);\n\n  valuePair[0] = key;\n  map.set('_ekm_value', valuePair);\n\n  _map.set(key, valuePair);\n\n  return valuePair;\n}\n/**\n * Variant of a Map object which enables lookup by equivalent (deeply equal)\n * object and array keys.\n */\n\n\nvar EquivalentKeyMap =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructs a new instance of EquivalentKeyMap.\n   *\n   * @param {Iterable.<*>} iterable Initial pair of key, value for map.\n   */\n  function EquivalentKeyMap(iterable) {\n    _classCallCheck(this, EquivalentKeyMap);\n\n    this.clear();\n\n    if (iterable instanceof EquivalentKeyMap) {\n      // Map#forEach is only means of iterating with support for IE11.\n      var iterablePairs = [];\n      iterable.forEach(function (value, key) {\n        iterablePairs.push([key, value]);\n      });\n      iterable = iterablePairs;\n    }\n\n    if (iterable != null) {\n      for (var i = 0; i < iterable.length; i++) {\n        this.set(iterable[i][0], iterable[i][1]);\n      }\n    }\n  }\n  /**\n   * Accessor property returning the number of elements.\n   *\n   * @return {number} Number of elements.\n   */\n\n\n  _createClass(EquivalentKeyMap, [{\n    key: \"set\",\n\n    /**\n     * Add or update an element with a specified key and value.\n     *\n     * @param {*} key   The key of the element to add.\n     * @param {*} value The value of the element to add.\n     *\n     * @return {EquivalentKeyMap} Map instance.\n     */\n    value: function set(key, value) {\n      // Shortcut non-object-like to set on internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        this._map.set(key, value);\n\n        return this;\n      } // Sort keys to ensure stable assignment into tree.\n\n\n      var properties = Object.keys(key).sort();\n      var valuePair = [key, value]; // Tree by type to avoid conflicts on numeric object keys, empty value.\n\n      var map = Array.isArray(key) ? this._arrayTreeMap : this._objectTreeMap;\n\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n\n        if (!map.has(property)) {\n          map.set(property, new EquivalentKeyMap());\n        }\n\n        map = map.get(property);\n        var propertyValue = key[property];\n\n        if (!map.has(propertyValue)) {\n          map.set(propertyValue, new EquivalentKeyMap());\n        }\n\n        map = map.get(propertyValue);\n      } // If an _ekm_value exists, there was already an equivalent key. Before\n      // overriding, ensure that the old key reference is removed from map to\n      // avoid memory leak of accumulating equivalent keys. This is, in a\n      // sense, a poor man's WeakMap, while still enabling iterability.\n\n\n      var previousValuePair = map.get('_ekm_value');\n\n      if (previousValuePair) {\n        this._map.delete(previousValuePair[0]);\n      }\n\n      map.set('_ekm_value', valuePair);\n\n      this._map.set(key, valuePair);\n\n      return this;\n    }\n    /**\n     * Returns a specified element.\n     *\n     * @param {*} key The key of the element to return.\n     *\n     * @return {?*} The element associated with the specified key or undefined\n     *              if the key can't be found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      // Shortcut non-object-like to get from internal Map.\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.get(key);\n      }\n\n      var valuePair = getValuePair(this, key);\n\n      if (valuePair) {\n        return valuePair[1];\n      }\n    }\n    /**\n     * Returns a boolean indicating whether an element with the specified key\n     * exists or not.\n     *\n     * @param {*} key The key of the element to test for presence.\n     *\n     * @return {boolean} Whether an element with the specified key exists.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      if (key === null || _typeof(key) !== 'object') {\n        return this._map.has(key);\n      } // Test on the _presence_ of the pair, not its value, as even undefined\n      // can be a valid member value for a key.\n\n\n      return getValuePair(this, key) !== undefined;\n    }\n    /**\n     * Removes the specified element.\n     *\n     * @param {*} key The key of the element to remove.\n     *\n     * @return {boolean} Returns true if an element existed and has been\n     *                   removed, or false if the element does not exist.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      if (!this.has(key)) {\n        return false;\n      } // This naive implementation will leave orphaned child trees. A better\n      // implementation should traverse and remove orphans.\n\n\n      this.set(key, undefined);\n      return true;\n    }\n    /**\n     * Executes a provided function once per each key/value pair, in insertion\n     * order.\n     *\n     * @param {Function} callback Function to execute for each element.\n     * @param {*}        thisArg  Value to use as `this` when executing\n     *                            `callback`.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _this = this;\n\n      var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;\n\n      this._map.forEach(function (value, key) {\n        // Unwrap value from object-like value pair.\n        if (key !== null && _typeof(key) === 'object') {\n          value = value[1];\n        }\n\n        callback.call(thisArg, value, key, _this);\n      });\n    }\n    /**\n     * Removes all elements.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map = new Map();\n      this._arrayTreeMap = new Map();\n      this._objectTreeMap = new Map();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._map.size;\n    }\n  }]);\n\n  return EquivalentKeyMap;\n}();\n\nmodule.exports = EquivalentKeyMap;\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","/**\n * External dependencies\n */\nimport { castArray, get, merge, isEqual, find } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport {\n\treceiveItems,\n\treceiveQueriedItems,\n} from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport { select, apiFetch } from './controls';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches\n *\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords( kind, name, records, query, invalidateCache = false ) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query );\n\t} else {\n\t\taction = receiveItems( records );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url      URL to preview the embed for.\n * @param {Mixed}   preview  Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst { transientEdits = {}, mergedEdits = {} } = yield select(\n\t\t'getEntity',\n\t\tkind,\n\t\tname\n\t);\n\tconst record = yield select( 'getRawEntityRecord', kind, name, recordId );\n\tconst editedRecord = yield select(\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ] ?\n\t\t\t\tmerge( {}, editedRecordValue, edits[ key ] ) :\n\t\t\t\tedits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield select( 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield select( 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string} kind    Kind of the received entity.\n * @param {string} name    Name of the received entity.\n * @param {Object} record  Record to be saved.\n * @param {Object} options Saving options.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false } = { isAutosave: false }\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\tyield { type: 'SAVE_ENTITY_RECORD_START', kind, name, recordId, isAutosave };\n\tlet updatedRecord;\n\tlet error;\n\ttry {\n\t\tconst path = `${ entity.baseURL }${ recordId ? '/' + recordId : '' }`;\n\t\tconst persistedRecord = yield select(\n\t\t\t'getRawEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tif ( isAutosave ) {\n\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t// so the client just sends and receives objects.\n\t\t\tconst currentUser = yield select( 'getCurrentUser' );\n\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\tconst autosavePost = yield select(\n\t\t\t\t'getAutosave',\n\t\t\t\tpersistedRecord.type,\n\t\t\t\tpersistedRecord.id,\n\t\t\t\tcurrentUserId\n\t\t\t);\n\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t// So we fallback to the previous autosave and then\n\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t// have a value.\n\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{ status: data.status === 'auto-draft' ? 'draft' : data.status }\n\t\t\t);\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t// when its update is requested by the author and the post had\n\t\t\t// draft or auto-draft status.\n\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\tlet newRecord = { ...persistedRecord, ...data, ...updatedRecord };\n\t\t\t\tnewRecord = Object.keys( newRecord ).reduce( ( acc, key ) => {\n\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get( newRecord[ key ], 'raw', newRecord[ key ] );\n\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\tnewRecord.status === 'draft' ?\n\t\t\t\t\t\t\t\tnewRecord.status :\n\t\t\t\t\t\t\t\tpersistedRecord.status;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\tacc[ key ] = get( persistedRecord[ key ], 'raw', persistedRecord[ key ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} );\n\t\t\t\tyield receiveEntityRecords( kind, name, newRecord, undefined, true );\n\t\t\t} else {\n\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t}\n\t\t} else {\n\t\t\t// Auto drafts should be converted to drafts on explicit saves,\n\t\t\t// but some plugins break with this behavior so we can't filter it on the server.\n\t\t\tlet data = record;\n\t\t\tif (\n\t\t\t\tkind === 'postType' &&\n\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t! data.status\n\t\t\t) {\n\t\t\t\tdata = { ...data, status: 'draft' };\n\t\t\t}\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\tyield receiveEntityRecords( kind, name, updatedRecord, undefined, true );\n\t\t}\n\t} catch ( _error ) {\n\t\terror = _error;\n\t}\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t\tisAutosave,\n\t};\n\n\treturn updatedRecord;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif ( ! ( yield select( 'hasEditsForEntityRecord', kind, name, recordId ) ) ) {\n\t\treturn;\n\t}\n\tconst edits = yield select(\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\tyield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { default as triggerApiFetch } from '@wordpress/api-fetch';\nimport { createRegistryControl } from '@wordpress/data';\n\n/**\n * Trigger an API Fetch request.\n *\n * @param {Object} request API Fetch Request Object.\n * @return {Object} control descriptor.\n */\nexport function apiFetch( request ) {\n\treturn {\n\t\ttype: 'API_FETCH',\n\t\trequest,\n\t};\n}\n\n/**\n * Calls a selector using the current state.\n *\n * @param {string} selectorName Selector name.\n * @param  {Array} args         Selector arguments.\n *\n * @return {Object} control descriptor.\n */\nexport function select( selectorName, ...args ) {\n\treturn {\n\t\ttype: 'SELECT',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\n/**\n * Dispatches a control action for triggering a registry select that has a\n * resolver.\n *\n * @param {string}  selectorName\n * @param {Array}   args  Arguments for the select.\n *\n * @return {Object} control descriptor.\n */\nexport function resolveSelect( selectorName, ...args ) {\n\treturn {\n\t\ttype: 'RESOLVE_SELECT',\n\t\tselectorName,\n\t\targs,\n\t};\n}\n\nconst controls = {\n\tAPI_FETCH( { request } ) {\n\t\treturn triggerApiFetch( request );\n\t},\n\n\tSELECT: createRegistryControl( ( registry ) => ( { selectorName, args } ) => {\n\t\treturn registry.select( 'core' )[ selectorName ]( ...args );\n\t} ),\n\n\tRESOLVE_SELECT: createRegistryControl(\n\t\t( registry ) => ( { selectorName, args } ) => {\n\t\t\treturn new Promise( ( resolve ) => {\n\t\t\t\tconst hasFinished = () => registry.select( 'core/data' )\n\t\t\t\t\t.hasFinishedResolution( 'core', selectorName, args );\n\t\t\t\tconst getResult = () => registry.select( 'core' )[ selectorName ]\n\t\t\t\t\t.apply( null, args );\n\n\t\t\t\t// trigger the selector (to trigger the resolver)\n\t\t\t\tconst result = getResult();\n\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\treturn resolve( result );\n\t\t\t\t}\n\n\t\t\t\tconst unsubscribe = registry.subscribe( () => {\n\t\t\t\t\tif ( hasFinished() ) {\n\t\t\t\t\t\tunsubscribe();\n\t\t\t\t\t\tresolve( getResult() );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\t),\n};\n\nexport default controls;\n","/**\n * External dependencies\n */\nimport { upperFirst, camelCase, map, find } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { addEntities } from './actions';\nimport { apiFetch, select } from './controls';\n\nexport const DEFAULT_ENTITY_KEY = 'id';\n\nexport const defaultEntities = [\n\t{ name: 'postType', kind: 'root', key: 'slug', baseURL: '/wp/v2/types' },\n\t{ name: 'media', kind: 'root', baseURL: '/wp/v2/media', plural: 'mediaItems' },\n\t{ name: 'taxonomy', kind: 'root', key: 'slug', baseURL: '/wp/v2/taxonomies', plural: 'taxonomies' },\n\t{ name: 'widgetArea', kind: 'root', baseURL: '/__experimental/widget-areas', plural: 'widgetAreas' },\n];\n\nexport const kinds = [\n\t{ name: 'postType', loadEntities: loadPostTypeEntities },\n\t{ name: 'taxonomy', loadEntities: loadTaxonomyEntities },\n];\n\n/**\n * Returns the list of post type entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadPostTypeEntities() {\n\tconst postTypes = yield apiFetch( { path: '/wp/v2/types?context=edit' } );\n\treturn map( postTypes, ( postType, name ) => {\n\t\treturn {\n\t\t\tkind: 'postType',\n\t\t\tbaseURL: '/wp/v2/' + postType.rest_base,\n\t\t\tname,\n\t\t\ttransientEdits: { blocks: true },\n\t\t\tmergedEdits: { meta: true },\n\t\t};\n\t} );\n}\n\n/**\n * Returns the list of the taxonomies entities.\n *\n * @return {Promise} Entities promise\n */\nfunction* loadTaxonomyEntities() {\n\tconst taxonomies = yield apiFetch( { path: '/wp/v2/taxonomies?context=edit' } );\n\treturn map( taxonomies, ( taxonomy, name ) => {\n\t\treturn {\n\t\t\tkind: 'taxonomy',\n\t\t\tbaseURL: '/wp/v2/' + taxonomy.rest_base,\n\t\t\tname,\n\t\t};\n\t} );\n}\n\n/**\n * Returns the entity's getter method name given its kind and name.\n *\n * @param {string}  kind      Entity kind.\n * @param {string}  name      Entity name.\n * @param {string}  prefix    Function prefix.\n * @param {boolean} usePlural Whether to use the plural form or not.\n *\n * @return {string} Method name\n */\nexport const getMethodName = ( kind, name, prefix = 'get', usePlural = false ) => {\n\tconst entity = find( defaultEntities, { kind, name } );\n\tconst kindPrefix = kind === 'root' ? '' : upperFirst( camelCase( kind ) );\n\tconst nameSuffix = upperFirst( camelCase( name ) ) + ( usePlural ? 's' : '' );\n\tconst suffix = usePlural && entity.plural ? upperFirst( camelCase( entity.plural ) ) : nameSuffix;\n\treturn `${ prefix }${ kindPrefix }${ suffix }`;\n};\n\n/**\n * Loads the kind entities into the store.\n *\n * @param {string} kind  Kind\n *\n * @return {Array} Entities\n */\nexport function* getKindEntities( kind ) {\n\tlet entities = yield select( 'getEntitiesByKind', kind );\n\tif ( entities && entities.length !== 0 ) {\n\t\treturn entities;\n\t}\n\n\tconst kindConfig = find( kinds, { name: kind } );\n\tif ( ! kindConfig ) {\n\t\treturn [];\n\t}\n\n\tentities = yield kindConfig.loadEntities();\n\tyield addEntities( entities );\n\n\treturn entities;\n}\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport controls from './controls';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport * as resolvers from './resolvers';\nimport { defaultEntities, getMethodName } from './entities';\nimport { REDUCER_KEY } from './name';\n\n// The entity selectors/resolvers and actions are shortcuts to their generic equivalents\n// (getEntityRecord, getEntityRecords, updateEntityRecord, updateEntityRecordss)\n// Instead of getEntityRecord, the consumer could use more user-frieldly named selector: getPostType, getTaxonomy...\n// The \"kind\" and the \"name\" of the entity are combined to generate these shortcuts.\n\nconst entitySelectors = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( state, key ) => selectors.getEntityRecord( state, kind, name, key );\n\tresult[ getMethodName( kind, name, 'get', true ) ] = ( state, ...args ) => selectors.getEntityRecords( state, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityResolvers = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name ) ] = ( key ) => resolvers.getEntityRecord( kind, name, key );\n\tconst pluralMethodName = getMethodName( kind, name, 'get', true );\n\tresult[ pluralMethodName ] = ( ...args ) => resolvers.getEntityRecords( kind, name, ...args );\n\tresult[ pluralMethodName ].shouldInvalidate = ( action, ...args ) => resolvers.getEntityRecords.shouldInvalidate( action, kind, name, ...args );\n\treturn result;\n}, {} );\n\nconst entityActions = defaultEntities.reduce( ( result, entity ) => {\n\tconst { kind, name } = entity;\n\tresult[ getMethodName( kind, name, 'save' ) ] = ( key ) => actions.saveEntityRecord( kind, name, key );\n\treturn result;\n}, {} );\n\nregisterStore( REDUCER_KEY, {\n\treducer,\n\tcontrols,\n\tactions: { ...actions, ...entityActions },\n\tselectors: { ...selectors, ...entitySelectors },\n\tresolvers: { ...resolvers, ...entityResolvers },\n} );\n","/**\n * The reducer key used by core data in store registration.\n * This is defined in a separate file to avoid cycle-dependency\n *\n * @type {string}\n */\nexport const REDUCER_KEY = 'core';\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that items have been received.\n *\n * @param {Array} items Items received.\n *\n * @return {Object} Action object.\n */\nexport function receiveItems( items ) {\n\treturn {\n\t\ttype: 'RECEIVE_ITEMS',\n\t\titems: castArray( items ),\n\t};\n}\n\n/**\n * Returns an action object used in signalling that queried data has been\n * received.\n *\n * @param {Array}   items Queried items received.\n * @param {?Object} query Optional query object.\n *\n * @return {Object} Action object.\n */\nexport function receiveQueriedItems( items, query = {} ) {\n\treturn {\n\t\t...receiveItems( items ),\n\t\tquery,\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { withWeakMapCache } from '../utils';\n\n/**\n * An object of properties describing a specific query.\n *\n * @typedef {Object} WPQueriedDataQueryParts\n *\n * @property {number} page      The query page (1-based index, default 1).\n * @property {number} perPage   Items per page for query (default 10).\n * @property {string} stableKey An encoded stable string of all non-pagination\n *                              query parameters.\n */\n\n/**\n * Given a query object, returns an object of parts, including pagination\n * details (`page` and `perPage`, or default values). All other properties are\n * encoded into a stable (idempotent) `stableKey` value.\n *\n * @param {Object} query Optional query object.\n *\n * @return {WPQueriedDataQueryParts} Query parts.\n */\nexport function getQueryParts( query ) {\n\t/**\n\t * @type {WPQueriedDataQueryParts}\n\t */\n\tconst parts = {\n\t\tstableKey: '',\n\t\tpage: 1,\n\t\tperPage: 10,\n\t};\n\n\t// Ensure stable key by sorting keys. Also more efficient for iterating.\n\tconst keys = Object.keys( query ).sort();\n\n\tfor ( let i = 0; i < keys.length; i++ ) {\n\t\tconst key = keys[ i ];\n\t\tconst value = query[ key ];\n\n\t\tswitch ( key ) {\n\t\t\tcase 'page':\n\t\t\t\tparts[ key ] = Number( value );\n\t\t\t\tbreak;\n\t\t\tcase 'per_page':\n\t\t\t\tparts.perPage = Number( value );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// While it could be any deterministic string, for simplicity's\n\t\t\t\t// sake mimic querystring encoding for stable key.\n\t\t\t\t//\n\t\t\t\t// TODO: For consistency with PHP implementation, addQueryArgs\n\t\t\t\t// should accept a key value pair, which may optimize its\n\t\t\t\t// implementation for our use here, vs. iterating an object\n\t\t\t\t// with only a single key.\n\t\t\t\tparts.stableKey += (\n\t\t\t\t\t( parts.stableKey ? '&' : '' ) +\n\t\t\t\t\taddQueryArgs( '', { [ key ]: value } ).slice( 1 )\n\t\t\t\t);\n\t\t}\n\t}\n\n\treturn parts;\n}\n\nexport default withWeakMapCache( getQueryParts );\n","export * from './actions';\nexport * from './selectors';\nexport { default as reducer } from './reducer';\n","/**\n * External dependencies\n */\nimport { map, flowRight } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tconservativeMapItem,\n\tifMatchingAction,\n\treplaceAction,\n\tonSubKey,\n} from '../utils';\nimport { DEFAULT_ENTITY_KEY } from '../entities';\nimport getQueryParts from './get-query-parts';\n\n/**\n * Returns a merged array of item IDs, given details of the received paginated\n * items. The array is sparse-like with `undefined` entries where holes exist.\n *\n * @param {?Array<number>} itemIds     Original item IDs (default empty array).\n * @param {number[]}       nextItemIds Item IDs to merge.\n * @param {number}         page        Page of items merged.\n * @param {number}         perPage     Number of items per page.\n *\n * @return {number[]} Merged array of item IDs.\n */\nexport function getMergedItemIds( itemIds, nextItemIds, page, perPage ) {\n\tconst nextItemIdsStartIndex = ( page - 1 ) * perPage;\n\n\t// If later page has already been received, default to the larger known\n\t// size of the existing array, else calculate as extending the existing.\n\tconst size = Math.max(\n\t\titemIds.length,\n\t\tnextItemIdsStartIndex + nextItemIds.length\n\t);\n\n\t// Preallocate array since size is known.\n\tconst mergedItemIds = new Array( size );\n\n\tfor ( let i = 0; i < size; i++ ) {\n\t\t// Preserve existing item ID except for subset of range of next items.\n\t\tconst isInNextItemsRange = (\n\t\t\ti >= nextItemIdsStartIndex &&\n\t\t\ti < nextItemIdsStartIndex + nextItemIds.length\n\t\t);\n\n\t\tmergedItemIds[ i ] = isInNextItemsRange ?\n\t\t\tnextItemIds[ i - nextItemIdsStartIndex ] :\n\t\t\titemIds[ i ];\n\t}\n\n\treturn mergedItemIds;\n}\n\n/**\n * Reducer tracking items state, keyed by ID. Items are assumed to be normal,\n * where identifiers are common across all queries.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nfunction items( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_ITEMS':\n\t\t\tconst key = action.key || DEFAULT_ENTITY_KEY;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.items.reduce( ( acc, value ) => {\n\t\t\t\t\tconst itemId = value[ key ];\n\t\t\t\t\tacc[ itemId ] = conservativeMapItem( state[ itemId ], value );\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer tracking queries state, keyed by stable query key. Each reducer\n * query object includes `itemIds` and `requestingPageByPerPage`.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Next state.\n */\nconst queries = flowRight( [\n\t// Limit to matching action type so we don't attempt to replace action on\n\t// an unhandled action.\n\tifMatchingAction( ( action ) => 'query' in action ),\n\n\t// Inject query parts into action for use both in `onSubKey` and reducer.\n\treplaceAction( ( action ) => {\n\t\t// `ifMatchingAction` still passes on initialization, where state is\n\t\t// undefined and a query is not assigned. Avoid attempting to parse\n\t\t// parts. `onSubKey` will omit by lack of `stableKey`.\n\t\tif ( action.query ) {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\t...getQueryParts( action.query ),\n\t\t\t};\n\t\t}\n\n\t\treturn action;\n\t} ),\n\n\t// Queries shape is shared, but keyed by query `stableKey` part. Original\n\t// reducer tracks only a single query object.\n\tonSubKey( 'stableKey' ),\n] )( ( state = null, action ) => {\n\tconst { type, page, perPage, key = DEFAULT_ENTITY_KEY } = action;\n\n\tif ( type !== 'RECEIVE_ITEMS' ) {\n\t\treturn state;\n\t}\n\n\treturn getMergedItemIds(\n\t\tstate || [],\n\t\tmap( action.items, key ),\n\t\tpage,\n\t\tperPage\n\t);\n} );\n\nexport default combineReducers( {\n\titems,\n\tqueries,\n} );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport EquivalentKeyMap from 'equivalent-key-map';\n\n/**\n * Internal dependencies\n */\nimport getQueryParts from './get-query-parts';\n\n/**\n * Cache of state keys to EquivalentKeyMap where the inner map tracks queries\n * to their resulting items set. WeakMap allows garbage collection on expired\n * state references.\n *\n * @type {WeakMap<Object,EquivalentKeyMap>}\n */\nconst queriedItemsCacheByState = new WeakMap();\n\n/**\n * Returns items for a given query, or null if the items are not known.\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nfunction getQueriedItemsUncached( state, query ) {\n\tconst { stableKey, page, perPage } = getQueryParts( query );\n\n\tif ( ! state.queries[ stableKey ] ) {\n\t\treturn null;\n\t}\n\n\tconst itemIds = state.queries[ stableKey ];\n\tif ( ! itemIds ) {\n\t\treturn null;\n\t}\n\n\tconst startOffset = perPage === -1 ? 0 : ( page - 1 ) * perPage;\n\tconst endOffset = perPage === -1 ? itemIds.length : Math.min(\n\t\tstartOffset + perPage,\n\t\titemIds.length\n\t);\n\n\tconst items = [];\n\tfor ( let i = startOffset; i < endOffset; i++ ) {\n\t\tconst itemId = itemIds[ i ];\n\t\titems.push( state.items[ itemId ] );\n\t}\n\n\treturn items;\n}\n\n/**\n * Returns items for a given query, or null if the items are not known. Caches\n * result both per state (by reference) and per query (by deep equality).\n * The caching approach is intended to be durable to query objects which are\n * deeply but not referentially equal, since otherwise:\n *\n * `getQueriedItems( state, {} ) !== getQueriedItems( state, {} )`\n *\n * @param {Object}  state State object.\n * @param {?Object} query Optional query.\n *\n * @return {?Array} Query items.\n */\nexport const getQueriedItems = createSelector( ( state, query = {} ) => {\n\tlet queriedItemsCache = queriedItemsCacheByState.get( state );\n\tif ( queriedItemsCache ) {\n\t\tconst queriedItems = queriedItemsCache.get( query );\n\t\tif ( queriedItems !== undefined ) {\n\t\t\treturn queriedItems;\n\t\t}\n\t} else {\n\t\tqueriedItemsCache = new EquivalentKeyMap();\n\t\tqueriedItemsCacheByState.set( state, queriedItemsCache );\n\t}\n\n\tconst items = getQueriedItemsUncached( state, query );\n\tqueriedItemsCache.set( query, items );\n\treturn items;\n} );\n","/**\n * External dependencies\n */\nimport { keyBy, map, groupBy, flowRight, isEqual, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\n\n/**\n * Internal dependencies\n */\nimport { ifMatchingAction, replaceAction } from './utils';\nimport { reducer as queriedDataReducer } from './queried-data';\nimport { defaultEntities, DEFAULT_ENTITY_KEY } from './entities';\n\n/**\n * Reducer managing terms state. Keyed by taxonomy slug, the value is either\n * undefined (if no request has been made for given taxonomy), null (if a\n * request is in-flight for given taxonomy), or the array of terms for the\n * taxonomy.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function terms( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TERMS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.taxonomy ]: action.terms,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing authors state. Keyed by id.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function users( state = { byId: {}, queries: {} }, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_QUERY':\n\t\t\treturn {\n\t\t\t\tbyId: {\n\t\t\t\t\t...state.byId,\n\t\t\t\t\t...keyBy( action.users, 'id' ),\n\t\t\t\t},\n\t\t\t\tqueries: {\n\t\t\t\t\t...state.queries,\n\t\t\t\t\t[ action.queryID ]: map( action.users, ( user ) => user.id ),\n\t\t\t\t},\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing current user state.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function currentUser( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_CURRENT_USER':\n\t\t\treturn action.currentUser;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing taxonomies.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function taxonomies( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_TAXONOMIES':\n\t\t\treturn action.taxonomies;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing theme supports data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function themeSupports( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_THEME_SUPPORTS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.themeSupports,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Higher Order Reducer for a given entity config. It supports:\n *\n *  - Fetching\n *  - Editing\n *  - Saving\n *\n * @param {Object} entityConfig  Entity config.\n *\n * @return {Function} Reducer.\n */\nfunction entity( entityConfig ) {\n\treturn flowRight( [\n\t\t// Limit to matching action type so we don't attempt to replace action on\n\t\t// an unhandled action.\n\t\tifMatchingAction( ( action ) => (\n\t\t\taction.name &&\n\t\t\taction.kind &&\n\t\t\taction.name === entityConfig.name &&\n\t\t\taction.kind === entityConfig.kind\n\t\t) ),\n\n\t\t// Inject the entity config into the action.\n\t\treplaceAction( ( action ) => {\n\t\t\treturn {\n\t\t\t\t...action,\n\t\t\t\tkey: entityConfig.key || DEFAULT_ENTITY_KEY,\n\t\t\t};\n\t\t} ),\n\t] )(\n\t\tcombineReducers( {\n\t\t\tqueriedData: queriedDataReducer,\n\n\t\t\tedits: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'RECEIVE_ITEMS':\n\t\t\t\t\t\tconst nextState = { ...state };\n\n\t\t\t\t\t\tfor ( const record of action.items ) {\n\t\t\t\t\t\t\tconst recordId = record[ action.key ];\n\t\t\t\t\t\t\tconst edits = nextState[ recordId ];\n\t\t\t\t\t\t\tif ( ! edits ) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst nextEdits = Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\t\t\t\t// If the edited value is still different to the persisted value,\n\t\t\t\t\t\t\t\t// keep the edited value in edits.\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t// Edits are the \"raw\" attribute values, but records may have\n\t\t\t\t\t\t\t\t\t// objects with more properties, so we use `get` here for the\n\t\t\t\t\t\t\t\t\t// comparison.\n\t\t\t\t\t\t\t\t\t! isEqual( edits[ key ], get( record[ key ], 'raw', record[ key ] ) )\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t}, {} );\n\n\t\t\t\t\t\t\tif ( Object.keys( nextEdits ).length ) {\n\t\t\t\t\t\t\t\tnextState[ recordId ] = nextEdits;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdelete nextState[ recordId ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn nextState;\n\n\t\t\t\t\tcase 'EDIT_ENTITY_RECORD':\n\t\t\t\t\t\tconst nextEdits = {\n\t\t\t\t\t\t\t...state[ action.recordId ],\n\t\t\t\t\t\t\t...action.edits,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tObject.keys( nextEdits ).forEach( ( key ) => {\n\t\t\t\t\t\t\t// Delete cleared edits so that the properties\n\t\t\t\t\t\t\t// are not considered dirty.\n\t\t\t\t\t\t\tif ( nextEdits[ key ] === undefined ) {\n\t\t\t\t\t\t\t\tdelete nextEdits[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: nextEdits,\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\n\t\t\tsaving: ( state = {}, action ) => {\n\t\t\t\tswitch ( action.type ) {\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_START':\n\t\t\t\t\tcase 'SAVE_ENTITY_RECORD_FINISH':\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t[ action.recordId ]: {\n\t\t\t\t\t\t\t\tpending: action.type === 'SAVE_ENTITY_RECORD_START',\n\t\t\t\t\t\t\t\terror: action.error,\n\t\t\t\t\t\t\t\tisAutosave: action.isAutosave,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn state;\n\t\t\t},\n\t\t} )\n\t);\n}\n\n/**\n * Reducer keeping track of the registered entities.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function entitiesConfig( state = defaultEntities, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_ENTITIES':\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\t...action.entities,\n\t\t\t];\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the registered entities config and data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const entities = ( state = {}, action ) => {\n\tconst newConfig = entitiesConfig( state.config, action );\n\n\t// Generates a dynamic reducer for the entities\n\tlet entitiesDataReducer = state.reducer;\n\tif ( ! entitiesDataReducer || newConfig !== state.config ) {\n\t\tconst entitiesByKind = groupBy( newConfig, 'kind' );\n\t\tentitiesDataReducer = combineReducers( Object.entries( entitiesByKind ).reduce( ( memo, [ kind, subEntities ] ) => {\n\t\t\tconst kindReducer = combineReducers( subEntities.reduce(\n\t\t\t\t( kindMemo, entityConfig ) => ( {\n\t\t\t\t\t...kindMemo,\n\t\t\t\t\t[ entityConfig.name ]: entity( entityConfig ),\n\t\t\t\t} ),\n\t\t\t\t{}\n\t\t\t) );\n\n\t\t\tmemo[ kind ] = kindReducer;\n\t\t\treturn memo;\n\t\t}, {} ) );\n\t}\n\n\tconst newData = entitiesDataReducer( state.data, action );\n\n\tif (\n\t\tnewData === state.data &&\n\t\tnewConfig === state.config &&\n\t\tentitiesDataReducer === state.reducer\n\t) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\treducer: entitiesDataReducer,\n\t\tdata: newData,\n\t\tconfig: newConfig,\n\t};\n};\n\n/**\n * Reducer keeping track of entity edit undo history.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nconst UNDO_INITIAL_STATE = [];\nUNDO_INITIAL_STATE.offset = 0;\nexport function undo( state = UNDO_INITIAL_STATE, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'EDIT_ENTITY_RECORD':\n\t\t\tif ( action.meta.isUndo || action.meta.isRedo ) {\n\t\t\t\tconst nextState = [ ...state ];\n\t\t\t\tnextState.offset = state.offset + ( action.meta.isUndo ? -1 : 1 );\n\t\t\t\treturn nextState;\n\t\t\t}\n\n\t\t\tif ( ! action.meta.undo ) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\t// Transient edits don't create an undo level, but are\n\t\t\t// reachable in the next meaningful edit to which they\n\t\t\t// are merged. They are defined in the entity's config.\n\t\t\tif ( ! Object.keys( action.edits ).some( ( key ) => ! action.transientEdits[ key ] ) ) {\n\t\t\t\tconst nextState = [ ...state ];\n\t\t\t\tnextState.flattenedUndo = { ...state.flattenedUndo, ...action.edits };\n\t\t\t\tnextState.offset = state.offset;\n\t\t\t\treturn nextState;\n\t\t\t}\n\n\t\t\t// Clear potential redos, because this only supports linear history.\n\t\t\tconst nextState = state.slice( 0, state.offset || undefined );\n\t\t\tnextState.offset = 0;\n\t\t\tnextState.pop();\n\t\t\tnextState.push( {\n\t\t\t\tkind: action.meta.undo.kind,\n\t\t\t\tname: action.meta.undo.name,\n\t\t\t\trecordId: action.meta.undo.recordId,\n\t\t\t\tedits: { ...state.flattenedUndo, ...action.meta.undo.edits },\n\t\t\t} );\n\t\t\t// When an edit is a function it's an optimization to avoid running some expensive operation.\n\t\t\t// We can't rely on the function references being the same so we opt out of comparing them here.\n\t\t\tconst comparisonUndoEdits = Object.values( action.meta.undo.edits ).filter( ( edit ) => typeof edit !== 'function' );\n\t\t\tconst comparisonEdits = Object.values( action.edits ).filter( ( edit ) => typeof edit !== 'function' );\n\t\t\tif ( ! isShallowEqual( comparisonUndoEdits, comparisonEdits ) ) {\n\t\t\t\tnextState.push( {\n\t\t\t\t\tkind: action.kind,\n\t\t\t\t\tname: action.name,\n\t\t\t\t\trecordId: action.recordId,\n\t\t\t\t\tedits: action.edits,\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nextState;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer managing embed preview data.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function embedPreviews( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_EMBED_PREVIEW':\n\t\t\tconst { url, preview } = action;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ url ]: preview,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n/**\n * State which tracks whether the user can perform an action on a REST\n * resource.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function userPermissions( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_USER_PERMISSION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.key ]: action.isAllowed,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning autosaves keyed by their parent's post id.\n *\n * @param  {Object} state  Current state.\n * @param  {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function autosaves( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RECEIVE_AUTOSAVES':\n\t\t\tconst { postId, autosaves: autosavesData } = action;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ postId ]: autosavesData,\n\t\t\t};\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( {\n\tterms,\n\tusers,\n\tcurrentUser,\n\ttaxonomies,\n\tthemeSupports,\n\tentities,\n\tundo,\n\tembedPreviews,\n\tuserPermissions,\n\tautosaves,\n} );\n","/**\n * External dependencies\n */\nimport { find, includes, get, hasIn, compact } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport {\n\treceiveUserQuery,\n\treceiveCurrentUser,\n\treceiveEntityRecords,\n\treceiveThemeSupports,\n\treceiveEmbedPreview,\n\treceiveUserPermission,\n\treceiveAutosaves,\n} from './actions';\nimport { getKindEntities } from './entities';\nimport { apiFetch, resolveSelect } from './controls';\n\n/**\n * Requests authors from the REST API.\n */\nexport function* getAuthors() {\n\tconst users = yield apiFetch( { path: '/wp/v2/users/?who=authors&per_page=-1' } );\n\tyield receiveUserQuery( 'authors', users );\n}\n\n/**\n * Requests the current user from the REST API.\n */\nexport function* getCurrentUser() {\n\tconst currentUser = yield apiFetch( { path: '/wp/v2/users/me' } );\n\tyield receiveCurrentUser( currentUser );\n}\n\n/**\n * Requests an entity's record from the REST API.\n *\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key\n */\nexport function* getEntityRecord( kind, name, key ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst record = yield apiFetch( { path: `${ entity.baseURL }/${ key }?context=edit` } );\n\tyield receiveEntityRecords( kind, name, record );\n}\n\n/**\n * Requests the entity's records from the REST API.\n *\n * @param {string}  kind   Entity kind.\n * @param {string}  name   Entity name.\n * @param {Object?} query  Query Object.\n */\nexport function* getEntityRecords( kind, name, query = {} ) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst path = addQueryArgs( entity.baseURL, {\n\t\t...query,\n\t\tcontext: 'edit',\n\t} );\n\tconst records = yield apiFetch( { path } );\n\tyield receiveEntityRecords( kind, name, Object.values( records ), query );\n}\n\ngetEntityRecords.shouldInvalidate = ( action, kind, name ) => {\n\treturn (\n\t\taction.type === 'RECEIVE_ITEMS' &&\n\t\taction.invalidateCache &&\n\t\tkind === action.kind &&\n\t\tname === action.name\n\t);\n};\n\n/**\n * Requests theme supports data from the index.\n */\nexport function* getThemeSupports() {\n\tconst activeThemes = yield apiFetch( { path: '/wp/v2/themes?status=active' } );\n\tyield receiveThemeSupports( activeThemes[ 0 ].theme_supports );\n}\n\n/**\n * Requests a preview from the from the Embed API.\n *\n * @param {string} url   URL to get the preview for.\n */\nexport function* getEmbedPreview( url ) {\n\ttry {\n\t\tconst embedProxyResponse = yield apiFetch( { path: addQueryArgs( '/oembed/1.0/proxy', { url } ) } );\n\t\tyield receiveEmbedPreview( url, embedProxyResponse );\n\t} catch ( error ) {\n\t\t// Embed API 404s if the URL cannot be embedded, so we have to catch the error from the apiRequest here.\n\t\tyield receiveEmbedPreview( url, false );\n\t}\n}\n\n/**\n * Requests Upload Permissions from the REST API.\n *\n * @deprecated since 5.0. Callers should use the more generic `canUser()` selector instead of\n *            `hasUploadPermissions()`, e.g. `canUser( 'create', 'media' )`.\n */\nexport function* hasUploadPermissions() {\n\tdeprecated( \"select( 'core' ).hasUploadPermissions()\", {\n\t\talternative: \"select( 'core' ).canUser( 'create', 'media' )\",\n\t} );\n\tyield* canUser( 'create', 'media' );\n}\n\n/**\n * Checks whether the current user can perform the given action on the given\n * REST resource.\n *\n * @param {string}  action   Action to check. One of: 'create', 'read', 'update',\n *                           'delete'.\n * @param {string}  resource REST resource to check, e.g. 'media' or 'posts'.\n * @param {?string} id       ID of the rest resource to check.\n */\nexport function* canUser( action, resource, id ) {\n\tconst methods = {\n\t\tcreate: 'POST',\n\t\tread: 'GET',\n\t\tupdate: 'PUT',\n\t\tdelete: 'DELETE',\n\t};\n\n\tconst method = methods[ action ];\n\tif ( ! method ) {\n\t\tthrow new Error( `'${ action }' is not a valid action.` );\n\t}\n\n\tconst path = id ? `/wp/v2/${ resource }/${ id }` : `/wp/v2/${ resource }`;\n\n\tlet response;\n\ttry {\n\t\tresponse = yield apiFetch( {\n\t\t\tpath,\n\t\t\t// Ideally this would always be an OPTIONS request, but unfortunately there's\n\t\t\t// a bug in the REST API which causes the Allow header to not be sent on\n\t\t\t// OPTIONS requests to /posts/:id routes.\n\t\t\t// https://core.trac.wordpress.org/ticket/45753\n\t\t\tmethod: id ? 'GET' : 'OPTIONS',\n\t\t\tparse: false,\n\t\t} );\n\t} catch ( error ) {\n\t\t// Do nothing if our OPTIONS request comes back with an API error (4xx or\n\t\t// 5xx). The previously determined isAllowed value will remain in the store.\n\t\treturn;\n\t}\n\n\tlet allowHeader;\n\tif ( hasIn( response, [ 'headers', 'get' ] ) ) {\n\t\t// If the request is fetched using the fetch api, the header can be\n\t\t// retrieved using the 'get' method.\n\t\tallowHeader = response.headers.get( 'allow' );\n\t} else {\n\t\t// If the request was preloaded server-side and is returned by the\n\t\t// preloading middleware, the header will be a simple property.\n\t\tallowHeader = get( response, [ 'headers', 'Allow' ], '' );\n\t}\n\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\tconst isAllowed = includes( allowHeader, method );\n\tyield receiveUserPermission( key, isAllowed );\n}\n\n/**\n * Request autosave data from the REST API.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport function* getAutosaves( postType, postId ) {\n\tconst { rest_base: restBase } = yield resolveSelect( 'getPostType', postType );\n\tconst autosaves = yield apiFetch( { path: `/wp/v2/${ restBase }/${ postId }/autosaves?context=edit` } );\n\n\tif ( autosaves && autosaves.length ) {\n\t\tyield receiveAutosaves( postId, autosaves );\n\t}\n}\n\n/**\n * Request autosave data from the REST API.\n *\n * This resolver exists to ensure the underlying autosaves are fetched via\n * `getAutosaves` when a call to the `getAutosave` selector is made.\n *\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n */\nexport function* getAutosave( postType, postId ) {\n\tyield resolveSelect( 'getAutosaves', postType, postId );\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { map, find, get, filter, compact, defaultTo } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { REDUCER_KEY } from './name';\nimport { getQueriedItems } from './queried-data';\n\n/**\n * Returns true if a request is in progress for embed preview data, or false\n * otherwise.\n *\n * @param {Object} state Data state.\n * @param {string} url   URL the preview would be for.\n *\n * @return {boolean} Whether a request is in progress for an embed preview.\n */\nexport const isRequestingEmbedPreview = createRegistrySelector( ( select ) => ( state, url ) => {\n\treturn select( 'core/data' ).isResolving( REDUCER_KEY, 'getEmbedPreview', [ url ] );\n} );\n\n/**\n * Returns all available authors.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Authors list.\n */\nexport function getAuthors( state ) {\n\treturn getUserQueryResults( state, 'authors' );\n}\n\n/**\n * Returns the current user.\n *\n * @param {Object} state Data state.\n *\n * @return {Object} Current user object.\n */\nexport function getCurrentUser( state ) {\n\treturn state.currentUser;\n}\n\n/**\n * Returns all the users returned by a query ID.\n *\n * @param {Object} state   Data state.\n * @param {string} queryID Query ID.\n *\n * @return {Array} Users list.\n */\nexport const getUserQueryResults = createSelector(\n\t( state, queryID ) => {\n\t\tconst queryResults = state.users.queries[ queryID ];\n\n\t\treturn map( queryResults, ( id ) => state.users.byId[ id ] );\n\t},\n\t( state, queryID ) => [ state.users.queries[ queryID ], state.users.byId ]\n);\n\n/**\n * Returns whether the entities for the give kind are loaded.\n *\n * @param {Object} state   Data state.\n * @param {string} kind  Entity kind.\n *\n * @return {boolean} Whether the entities are loaded\n */\nexport function getEntitiesByKind( state, kind ) {\n\treturn filter( state.entities.config, { kind } );\n}\n\n/**\n * Returns the entity object given its kind and name.\n *\n * @param {Object} state   Data state.\n * @param {string} kind  Entity kind.\n * @param {string} name  Entity name.\n *\n * @return {Object} Entity\n */\nexport function getEntity( state, kind, name ) {\n\treturn find( state.entities.config, { kind, name } );\n}\n\n/**\n * Returns the Entity's record object by key.\n *\n * @param {Object} state  State tree\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key\n *\n * @return {Object?} Record.\n */\nexport function getEntityRecord( state, kind, name, key ) {\n\treturn get( state.entities.data, [ kind, name, 'queriedData', 'items', key ] );\n}\n\n/**\n * Returns the entity's record object by key,\n * with its attributes mapped to their raw values.\n *\n * @param {Object} state  State tree.\n * @param {string} kind   Entity kind.\n * @param {string} name   Entity name.\n * @param {number} key    Record's key.\n *\n * @return {Object?} Object with the entity's raw attributes.\n */\nexport const getRawEntityRecord = createSelector(\n\t( state, kind, name, key ) => {\n\t\tconst record = getEntityRecord( state, kind, name, key );\n\t\treturn (\n\t\t\trecord &&\n\t\t\t\t\t\t\tObject.keys( record ).reduce( ( acc, _key ) => {\n\t\t\t\t\t\t\t\t// Because edits are the \"raw\" attribute values,\n\t\t\t\t\t\t\t\t// we return those from record selectors to make rendering,\n\t\t\t\t\t\t\t\t// comparisons, and joins with edits easier.\n\t\t\t\t\t\t\t\tacc[ _key ] = get( record[ _key ], 'raw', record[ _key ] );\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t}, {} )\n\t\t);\n\t},\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns the Entity's records.\n *\n * @param {Object}  state  State tree\n * @param {string}  kind   Entity kind.\n * @param {string}  name   Entity name.\n * @param {?Object} query  Optional terms query.\n *\n * @return {Array} Records.\n */\nexport function getEntityRecords( state, kind, name, query ) {\n\tconst queriedState = get( state.entities.data, [ kind, name, 'queriedData' ] );\n\tif ( ! queriedState ) {\n\t\treturn [];\n\t}\n\treturn getQueriedItems( queriedState, query );\n}\n\n/**\n * Returns the specified entity record's edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's edits.\n */\nexport function getEntityRecordEdits( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [ kind, name, 'edits', recordId ] );\n}\n\n/**\n * Returns the specified entity record's non transient edits.\n *\n * Transient edits don't create an undo level, and\n * are not considered for change detection.\n * They are defined in the entity's config.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's non transient edits.\n */\nexport const getEntityRecordNonTransientEdits = createSelector(\n\t( state, kind, name, recordId ) => {\n\t\tconst { transientEdits = {} } = getEntity( state, kind, name );\n\t\tconst edits = getEntityRecordEdits( state, kind, name, recordId ) || [];\n\t\treturn Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tif ( ! transientEdits[ key ] ) {\n\t\t\t\tacc[ key ] = edits[ key ];\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {} );\n\t},\n\t( state ) => [ state.entities.config, state.entities.data ]\n);\n\n/**\n * Returns true if the specified entity record has edits,\n * and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record has edits or not.\n */\nexport function hasEditsForEntityRecord( state, kind, name, recordId ) {\n\treturn Object.keys( getEntityRecordNonTransientEdits( state, kind, name, recordId ) ).length > 0;\n}\n\n/**\n * Returns the specified entity record, merged with its edits.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record, merged with its edits.\n */\nexport const getEditedEntityRecord = createSelector(\n\t( state, kind, name, recordId ) => ( {\n\t\t...getRawEntityRecord( state, kind, name, recordId ),\n\t\t...getEntityRecordEdits( state, kind, name, recordId ),\n\t} ),\n\t( state ) => [ state.entities.data ]\n);\n\n/**\n * Returns true if the specified entity record is autosaving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is autosaving or not.\n */\nexport function isAutosavingEntityRecord( state, kind, name, recordId ) {\n\tconst { pending, isAutosave } = get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'saving', recordId ],\n\t\t{}\n\t);\n\treturn Boolean( pending && isAutosave );\n}\n\n/**\n * Returns true if the specified entity record is saving, and false otherwise.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {boolean} Whether the entity record is saving or not.\n */\nexport function isSavingEntityRecord( state, kind, name, recordId ) {\n\treturn get(\n\t\tstate.entities.data,\n\t\t[ kind, name, 'saving', recordId, 'pending' ],\n\t\tfalse\n\t);\n}\n\n/**\n * Returns the specified entity record's last save error.\n *\n * @param {Object} state    State tree.\n * @param {string} kind     Entity kind.\n * @param {string} name     Entity name.\n * @param {number} recordId Record ID.\n *\n * @return {Object?} The entity record's save error.\n */\nexport function getLastEntitySaveError( state, kind, name, recordId ) {\n\treturn get( state.entities.data, [ kind, name, 'saving', recordId, 'error' ] );\n}\n\n/**\n * Returns the current undo offset for the\n * entity records edits history. The offset\n * represents how many items from the end\n * of the history stack we are at. 0 is the\n * last edit, -1 is the second last, and so on.\n *\n * @param {Object} state State tree.\n *\n * @return {number} The current undo offset.\n */\nfunction getCurrentUndoOffset( state ) {\n\treturn state.undo.offset;\n}\n\n/**\n * Returns the previous edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getUndoEdit( state ) {\n\treturn state.undo[ state.undo.length - 2 + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns the next edit from the current undo offset\n * for the entity records edits history, if any.\n *\n * @param {Object} state State tree.\n *\n * @return {Object?} The edit.\n */\nexport function getRedoEdit( state ) {\n\treturn state.undo[ state.undo.length + getCurrentUndoOffset( state ) ];\n}\n\n/**\n * Returns true if there is a previous edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a previous edit or not.\n */\nexport function hasUndo( state ) {\n\treturn Boolean( getUndoEdit( state ) );\n}\n\n/**\n * Returns true if there is a next edit from the current undo offset\n * for the entity records edits history, and false otherwise.\n *\n * @param {Object} state State tree.\n *\n * @return {boolean} Whether there is a next edit or not.\n */\nexport function hasRedo( state ) {\n\treturn Boolean( getRedoEdit( state ) );\n}\n\n/**\n * Return theme supports data in the index.\n *\n * @param {Object} state Data state.\n *\n * @return {*}           Index data.\n */\nexport function getThemeSupports( state ) {\n\treturn state.themeSupports;\n}\n\n/**\n * Returns the embed preview for the given URL.\n *\n * @param {Object} state    Data state.\n * @param {string} url      Embedded URL.\n *\n * @return {*} Undefined if the preview has not been fetched, otherwise, the preview fetched from the embed preview API.\n */\nexport function getEmbedPreview( state, url ) {\n\treturn state.embedPreviews[ url ];\n}\n\n/**\n * Determines if the returned preview is an oEmbed link fallback.\n *\n * WordPress can be configured to return a simple link to a URL if it is not embeddable.\n * We need to be able to determine if a URL is embeddable or not, based on what we\n * get back from the oEmbed preview API.\n *\n * @param {Object} state    Data state.\n * @param {string} url      Embedded URL.\n *\n * @return {boolean} Is the preview for the URL an oEmbed link fallback.\n */\nexport function isPreviewEmbedFallback( state, url ) {\n\tconst preview = state.embedPreviews[ url ];\n\tconst oEmbedLinkCheck = '<a href=\"' + url + '\">' + url + '</a>';\n\tif ( ! preview ) {\n\t\treturn false;\n\t}\n\treturn preview.html === oEmbedLinkCheck;\n}\n\n/**\n * Returns whether the current user can upload media.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @deprecated since 5.0. Callers should use the more generic `canUser()` selector instead of\n *             `hasUploadPermissions()`, e.g. `canUser( 'create', 'media' )`.\n *\n * @param {Object} state Data state.\n *\n * @return {boolean} Whether or not the user can upload media. Defaults to `true` if the OPTIONS\n *                   request is being made.\n */\nexport function hasUploadPermissions( state ) {\n\tdeprecated( \"select( 'core' ).hasUploadPermissions()\", {\n\t\talternative: \"select( 'core' ).canUser( 'create', 'media' )\",\n\t} );\n\treturn defaultTo( canUser( state, 'create', 'media' ), true );\n}\n\n/**\n * Returns whether the current user can perform the given action on the given\n * REST resource.\n *\n * Calling this may trigger an OPTIONS request to the REST API via the\n * `canUser()` resolver.\n *\n * https://developer.wordpress.org/rest-api/reference/\n *\n * @param {Object}   state            Data state.\n * @param {string}   action           Action to check. One of: 'create', 'read', 'update', 'delete'.\n * @param {string}   resource         REST resource to check, e.g. 'media' or 'posts'.\n * @param {string=}  id               Optional ID of the rest resource to check.\n *\n * @return {boolean|undefined} Whether or not the user can perform the action,\n *                             or `undefined` if the OPTIONS request is still being made.\n */\nexport function canUser( state, action, resource, id ) {\n\tconst key = compact( [ action, resource, id ] ).join( '/' );\n\treturn get( state, [ 'userPermissions', key ] );\n}\n\n/**\n * Returns the latest autosaves for the post.\n *\n * May return multiple autosaves since the backend stores one autosave per\n * author for each post.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {?Array} An array of autosaves for the post, or undefined if there is none.\n */\nexport function getAutosaves( state, postType, postId ) {\n\treturn state.autosaves[ postId ];\n}\n\n/**\n * Returns the autosave for the post and author.\n *\n * @param {Object} state    State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n * @param {number} authorId The id of the author.\n *\n * @return {?Object} The autosave for the post and author.\n */\nexport function getAutosave( state, postType, postId, authorId ) {\n\tif ( authorId === undefined ) {\n\t\treturn;\n\t}\n\n\tconst autosaves = state.autosaves[ postId ];\n\treturn find( autosaves, { author: authorId } );\n}\n\n/**\n * Returns true if the REST request for autosaves has completed.\n *\n * @param {Object} state State tree.\n * @param {string} postType The type of the parent post.\n * @param {number} postId   The id of the parent post.\n *\n * @return {boolean} True if the REST request was completed. False otherwise.\n */\nexport const hasFetchedAutosaves = createRegistrySelector( ( select ) => ( state, postType, postId ) => {\n\treturn select( REDUCER_KEY ).hasFinishedResolution( 'getAutosaves', [ postType, postId ] );\n} );\n\n/**\n * Returns a new reference when edited values have changed. This is useful in\n * inferring where an edit has been made between states by comparison of the\n * return values using strict equality.\n *\n * @example\n *\n * ```\n * const hasEditOccurred = (\n *    getReferenceByDistinctEdits( beforeState ) !==\n *    getReferenceByDistinctEdits( afterState )\n * );\n * ```\n *\n * @param {Object} state Editor state.\n *\n * @return {*} A value whose reference will change only when an edit occurs.\n */\nexport const getReferenceByDistinctEdits = createSelector(\n\t() => [],\n\t( state ) => [ state.undo.length, state.undo.offset ],\n);\n","/**\n * External dependencies\n */\nimport { isEqual } from 'lodash';\n\n/**\n * Given the current and next item entity, returns the minimally \"modified\"\n * result of the next item, preferring value references from the original item\n * if equal. If all values match, the original item is returned.\n *\n * @param {Object} item     Original item.\n * @param {Object} nextItem Next item.\n *\n * @return {Object} Minimally modified merged item.\n */\nexport default function conservativeMapItem( item, nextItem ) {\n\t// Return next item in its entirety if there is no original item.\n\tif ( ! item ) {\n\t\treturn nextItem;\n\t}\n\n\tlet hasChanges = false;\n\tconst result = {};\n\tfor ( const key in nextItem ) {\n\t\tif ( isEqual( item[ key ], nextItem[ key ] ) ) {\n\t\t\tresult[ key ] = item[ key ];\n\t\t} else {\n\t\t\thasChanges = true;\n\t\t\tresult[ key ] = nextItem[ key ];\n\t\t}\n\t}\n\n\tif ( ! hasChanges ) {\n\t\treturn item;\n\t}\n\treturn result;\n}\n","/**\n * A higher-order reducer creator which invokes the original reducer only if\n * the dispatching action matches the given predicate, **OR** if state is\n * initializing (undefined).\n *\n * @param {Function} isMatch Function predicate for allowing reducer call.\n *\n * @return {Function} Higher-order reducer.\n */\nconst ifMatchingAction = ( isMatch ) => ( reducer ) => ( state, action ) => {\n\tif ( state === undefined || isMatch( action ) ) {\n\t\treturn reducer( state, action );\n\t}\n\n\treturn state;\n};\n\nexport default ifMatchingAction;\n","export { default as conservativeMapItem } from './conservative-map-item';\nexport { default as ifMatchingAction } from './if-matching-action';\nexport { default as onSubKey } from './on-sub-key';\nexport { default as replaceAction } from './replace-action';\nexport { default as withWeakMapCache } from './with-weak-map-cache';\n","/**\n * Higher-order reducer creator which creates a combined reducer object, keyed\n * by a property on the action object.\n *\n * @param {string} actionProperty Action property by which to key object.\n *\n * @return {Function} Higher-order reducer.\n */\nexport const onSubKey = ( actionProperty ) => ( reducer ) => ( state = {}, action ) => {\n\t// Retrieve subkey from action. Do not track if undefined; useful for cases\n\t// where reducer is scoped by action shape.\n\tconst key = action[ actionProperty ];\n\tif ( key === undefined ) {\n\t\treturn state;\n\t}\n\n\t// Avoid updating state if unchanged. Note that this also accounts for a\n\t// reducer which returns undefined on a key which is not yet tracked.\n\tconst nextKeyState = reducer( state[ key ], action );\n\tif ( nextKeyState === state[ key ] ) {\n\t\treturn state;\n\t}\n\n\treturn {\n\t\t...state,\n\t\t[ key ]: nextKeyState,\n\t};\n};\n\nexport default onSubKey;\n","/**\n * Higher-order reducer creator which substitutes the action object before\n * passing to the original reducer.\n *\n * @param {Function} replacer Function mapping original action to replacement.\n *\n * @return {Function} Higher-order reducer.\n */\nconst replaceAction = ( replacer ) => ( reducer ) => ( state, action ) => {\n\treturn reducer( state, replacer( action ) );\n};\n\nexport default replaceAction;\n","/**\n * External dependencies\n */\nimport { isObjectLike } from 'lodash';\n\n/**\n * Given a function, returns an enhanced function which caches the result and\n * tracks in WeakMap. The result is only cached if the original function is\n * passed a valid object-like argument (requirement for WeakMap key).\n *\n * @param {Function} fn Original function.\n *\n * @return {Function} Enhanced caching function.\n */\nfunction withWeakMapCache( fn ) {\n\tconst cache = new WeakMap();\n\n\treturn function( key ) {\n\t\tlet value;\n\t\tif ( cache.has( key ) ) {\n\t\t\tvalue = cache.get( key );\n\t\t} else {\n\t\t\tvalue = fn( key );\n\n\t\t\t// Can reach here if key is not valid for WeakMap, since `has`\n\t\t\t// will return false for invalid key. Since `set` will throw,\n\t\t\t// ensure that key is valid before setting into cache.\n\t\t\tif ( isObjectLike( key ) ) {\n\t\t\t\tcache.set( key, value );\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n}\n\nexport default withWeakMapCache;\n","(function() { module.exports = this[\"regeneratorRuntime\"]; }());","(function() { module.exports = this[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"deprecated\"]; }());","(function() { module.exports = this[\"wp\"][\"isShallowEqual\"]; }());","(function() { module.exports = this[\"wp\"][\"url\"]; }());","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}