{"version":3,"sources":["webpack://wp/webpack/bootstrap","webpack://wp/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://wp/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://wp/./node_modules/classnames/index.js","webpack://wp/./node_modules/rememo/es/rememo.js","webpack://wp/@wordpress/rich-text/src/apply-format.js","webpack://wp/@wordpress/rich-text/src/change-list-type.js","webpack://wp/@wordpress/rich-text/src/component/aria.js","webpack://wp/@wordpress/rich-text/src/component/editable.js","webpack://wp/@wordpress/rich-text/src/component/format-edit.js","webpack://wp/@wordpress/rich-text/src/component/index.js","webpack://wp/@wordpress/rich-text/src/concat.js","webpack://wp/@wordpress/rich-text/src/create-element.js","webpack://wp/@wordpress/rich-text/src/create.js","webpack://wp/@wordpress/rich-text/src/get-active-format.js","webpack://wp/@wordpress/rich-text/src/get-active-formats.js","webpack://wp/@wordpress/rich-text/src/get-active-object.js","webpack://wp/@wordpress/rich-text/src/get-format-type.js","webpack://wp/@wordpress/rich-text/src/get-last-child-index.js","webpack://wp/@wordpress/rich-text/src/get-line-index.js","webpack://wp/@wordpress/rich-text/src/get-parent-line-index.js","webpack://wp/@wordpress/rich-text/src/get-text-content.js","webpack://wp/@wordpress/rich-text/src/indent-list-items.js","webpack://wp/@wordpress/rich-text/src/index.js","webpack://wp/@wordpress/rich-text/src/insert-line-separator.js","webpack://wp/@wordpress/rich-text/src/insert-object.js","webpack://wp/@wordpress/rich-text/src/insert.js","webpack://wp/@wordpress/rich-text/src/is-active-list-type.js","webpack://wp/@wordpress/rich-text/src/is-collapsed.js","webpack://wp/@wordpress/rich-text/src/is-empty.js","webpack://wp/@wordpress/rich-text/src/is-format-equal.js","webpack://wp/@wordpress/rich-text/src/is-list-root-selected.js","webpack://wp/@wordpress/rich-text/src/join.js","webpack://wp/@wordpress/rich-text/src/normalise-formats.js","webpack://wp/@wordpress/rich-text/src/outdent-list-items.js","webpack://wp/@wordpress/rich-text/src/register-format-type.js","webpack://wp/@wordpress/rich-text/src/remove-format.js","webpack://wp/@wordpress/rich-text/src/remove-line-separator.js","webpack://wp/@wordpress/rich-text/src/remove.js","webpack://wp/@wordpress/rich-text/src/replace.js","webpack://wp/@wordpress/rich-text/src/slice.js","webpack://wp/@wordpress/rich-text/src/special-characters.js","webpack://wp/@wordpress/rich-text/src/split.js","webpack://wp/@wordpress/rich-text/src/store/actions.js","webpack://wp/@wordpress/rich-text/src/store/index.js","webpack://wp/@wordpress/rich-text/src/store/reducer.js","webpack://wp/@wordpress/rich-text/src/store/selectors.js","webpack://wp/@wordpress/rich-text/src/to-dom.js","webpack://wp/@wordpress/rich-text/src/to-html-string.js","webpack://wp/@wordpress/rich-text/src/to-tree.js","webpack://wp/@wordpress/rich-text/src/toggle-format.js","webpack://wp/@wordpress/rich-text/src/unregister-format-type.js","webpack://wp/@wordpress/rich-text/src/update-formats.js","webpack://wp/external {\"this\":[\"wp\",\"compose\"]}","webpack://wp/external {\"this\":[\"wp\",\"data\"]}","webpack://wp/external {\"this\":[\"wp\",\"deprecated\"]}","webpack://wp/external {\"this\":[\"wp\",\"element\"]}","webpack://wp/external {\"this\":[\"wp\",\"escapeHtml\"]}","webpack://wp/external {\"this\":[\"wp\",\"hooks\"]}","webpack://wp/external {\"this\":[\"wp\",\"isShallowEqual\"]}","webpack://wp/external {\"this\":[\"wp\",\"keycodes\"]}","webpack://wp/external {\"this\":\"lodash\"}"],"names":["replace","array","index","value","slice","applyFormat","format","startIndex","start","endIndex","end","formats","activeFormats","newFormats","startFormat","find","type","indexOf","position","Infinity","filter","length","splice","normaliseFormats","reject","changeListType","newFormat","text","replacements","startingLineIndex","getLineIndex","startLineFormats","endLineFormats","getParentLineIndex","newReplacements","startCount","endCount","changed","LINE_SEPARATOR","map","i","isAriaPropName","name","startsWith","pickAriaProps","props","pickBy","key","isNil","diffAriaProps","nextProps","prevAriaKeys","keys","nextAriaKeys","removedKeys","difference","updatedKeys","isEqual","Editable","bindEditorNode","bind","style","editorNode","setAttribute","Object","assign","whiteSpace","className","reversed","forEach","removeAttribute","setRef","tagName","record","valueToEditableHTML","remainingProps","createElement","role","contentEditable","ref","suppressContentEditableWarning","dangerouslySetInnerHTML","__html","Component","interactiveContentTags","Set","FormatEdit","formatTypes","onChange","allowedFormats","withoutInteractiveFormatting","Edit","edit","has","activeFormat","getActiveFormat","isActive","undefined","activeObject","getActiveObject","isObjectActive","attributes","withSelect","select","getFormatTypes","window","getSelection","getComputedStyle","INSERTION_INPUT_TYPES_TO_IGNORE","globalStyle","document","head","appendChild","createPrepareEditableTree","prefix","fns","reduce","accumulator","push","fn","RichText","selectionStart","selectionEnd","arguments","onFocus","onBlur","handleDelete","handleEnter","handleSpace","handleHorizontalNavigation","onPaste","onCreateUndoLevel","onInput","onCompositionEnd","onSelectionChange","createRecord","applyRecord","valueToFormat","onPointerDown","formatToValue","onKeyDown","event","state","lastHistoryValue","removeEventListener","cancelAnimationFrame","rafId","node","process","computedStyle","display","console","warn","editableRef","multilineTag","__unstableMultilineTag","selection","range","rangeCount","getRangeAt","create","element","multilineWrapperTags","__unstableIsEditableTree","domOnly","apply","current","prepareEditableTree","__unstableDomOnly","placeholder","clipboardData","items","files","plainText","html","getData","error1","error2","preventDefault","log","transformed","accumlator","__unstablePasteRule","image","test","removeEditorOnlyFormats","unstableOnFocus","recalculateBoundaryStyle","setState","requestAnimationFrame","addEventListener","setFocusedElement","deprecated","alternative","instanceId","nativeEvent","isComposing","inputType","change","updateFormats","withoutHistory","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","setTimeout","clearTimeout","timeout","__unstableIsSelected","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","newValue","getActiveFormats","boundarySelector","querySelector","newColor","color","selector","rule","innerHTML","changeHandlers","v","values","changeHandler","__unstableOnCreateUndoLevel","keyCode","DELETE","BACKSPACE","ESCAPE","__unstableDidAutomaticChange","__unstableUndo","onDelete","isReverse","removeLineSeparator","remove","isCollapsed","ENTER","onEnter","shiftKey","SPACE","characterBefore","indentListItems","altKey","metaKey","ctrlKey","LEFT","RIGHT","collapsed","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","newPos","target","textContent","parentNode","Array","from","childNodes","ownerDocument","createRange","setStart","setEnd","removeAllRanges","addRange","prevProps","isSelected","shouldReapply","predicate","prepareProps","prevPrepareProps","isShallowEqual","prepare","toDom","body","formatType","__experimentalCreatePrepareEditableTree","removeFormat","toHTMLString","Tagname","classnames","children","defaultProps","compose","withSafeTimeout","mergePair","a","b","concat","implementation","createHTMLDocument","Node","TEXT_NODE","ELEMENT_NODE","createEmptyValue","simpleFindKey","object","toFormat","class","getFormatTypeForClassName","trim","getFormatTypeForBareElement","__experimentalCreateOnChangeEditableValue","registeredAttributes","unregisteredAttributes","isEditableTree","createFromElement","createFromMultilineElement","accumulateSelection","startContainer","startOffset","endContainer","endOffset","currentLength","nodeType","filterRange","nodeValue","ZWNBSPRegExp","RegExp","ZWNBSP","filterString","string","currentWrapperTags","hasChildNodes","nodeName","toLowerCase","getAttribute","lastFormats","lastFormat","getAttributes","isFormatEqual","OBJECT_REPLACEMENT_CHARACTER","hasAttributes","getFormatType","getLastChildIndex","lineIndex","lineFormats","childIndex","formatsAtIndex","startFormats","getTextContent","getTargetLevelLineIndex","rootFormat","previousLineIndex","formatsAtLineIndex","formatsAtPreviousLineIndex","targetLevelLineIndex","targetFormats","lastformat","insertLineSeparator","beforeText","previousLineSeparatorIndex","lastIndexOf","previousLineSeparatorFormats","valueToInsert","insert","insertObject","formatToInsert","isActiveListType","rootType","replacement","isEmpty","isEmptyLine","format1","format2","attributes1","attributes2","keys1","keys2","isListRootSelected","join","separator","formatsAtPreviousIndex","newFormatsAtIndex","formatIndex","previousFormat","outdentListItems","parentFormats","endingLineIndex","lastChildIndex","currentFormats","registerFormatType","settings","error","formatTypeForBareElement","formatTypeForClassName","title","keywords","dispatch","addFormatTypes","addFilter","OriginalComponent","selectPrefix","dispatchPrefix","newProps","propsByPrefix","args","richTextIdentifier","identifier","blockClientId","clientId","hocs","__experimentalGetPropsForEditableTreePreparation","sel","mapKeys","__experimentalGetPropsForEditableTreeChangeHandler","withDispatch","disp","filterFormats","backward","removeStart","removeEnd","pattern","match","rest","offset","newText","fill","split","splitAtSelection","nextStart","substring","before","after","castArray","removeFormatTypes","names","registerStore","reducer","selectors","actions","action","keyBy","omit","combineReducers","createSelector","bareElementTagName","elementClassName","createPathToNode","rootNode","path","previousSibling","getNodeByPath","shift","createEmpty","append","child","createTextNode","appendText","appendData","getLastChild","lastChild","getParent","isText","getText","removeChild","startPath","endPath","tree","toTree","onStartIndex","pointer","onEndIndex","applyValue","applySelection","future","futureChild","firstChild","currentChild","isEqualNode","data","replaceChild","currentAttributes","futureAttributes","ii","isRangeEqual","activeElement","focus","createChildrenHTML","parent","createElementHTML","attributeString","isValidAttributeName","escapeAttribute","escapeHTML","fromFormat","boundaryClass","elementAttributes","formatsLength","multilineFormat","deepestActiveFormat","lastSeparatorFormats","lastCharacterFormats","lastCharacter","character","charAt","shouldInsertPadding","characterFormats","newNode","contenteditable","toggleFormat","unregisterFormatType","oldFormat","removeFilter"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAe;AACf;AACA,iDAAiD,gBAAgB;AACjE;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACNA;AAAA;AAAe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;;ACdA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAe;AACf;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AChBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAA;AAAA;AAA8C;AAC/B;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,kBAAkB,+DAAc;AAChC,C;;;;;;;;;;;;ACdA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAA;AAA8C;AAC/B;AACf,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,MAAM,+DAAc;AACpB,KAAK;AACL;;AAEA;AACA,C;;;;;;;;;;;;AClBA;AAAA;AAAA;AAA0E;AAC3D;AACf;AACA,eAAe,6EAA4B;AAC3C;;AAEA;AACA;;AAEA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AClBA;AAAA;AAAe;AACf;AACA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAA+C;AACa;AAC7C;AACf,eAAe,mEAAO;AACtB;AACA;;AAEA,SAAS,sEAAqB;AAC9B,C;;;;;;;;;;;;ACRA;AAAA;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAoD;AACJ;AACI;AACrC;AACf,SAAS,kEAAiB,SAAS,gEAAe,SAAS,kEAAiB;AAC5E,C;;;;;;;;;;;;ACLA;AAAA;AAAA,wBAAwB,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,sBAAsB;;AAEpV;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB;;AAEhB;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE,UAAU,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,oGAAC;AACJ,EAAE,MAAM,EAEN;AACF,CAAC;;;;;;;;;;;;;AC/CD;AAAa;;AAEb;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB;AACA,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AA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","file":"./build/rich-text/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/rich-text/build-module/index.js\");\n","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar LEAF_KEY, hasWeakMap;\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {Object}\n */\nLEAF_KEY = {};\n\n/**\n * Whether environment supports WeakMap.\n *\n * @type {boolean}\n */\nhasWeakMap = typeof WeakMap !== 'undefined';\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @param {*} value Value to return.\n *\n * @return {Array} Value returned as entry in array.\n */\nfunction arrayOf( value ) {\n\treturn [ value ];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike( value ) {\n\treturn !! value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Object} Cache object.\n */\nfunction createCache() {\n\tvar cache = {\n\t\tclear: function() {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {Array}  a         First array.\n * @param {Array}  b         Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual( a, b, fromIndex ) {\n\tvar i;\n\n\tif ( a.length !== b.length ) {\n\t\treturn false;\n\t}\n\n\tfor ( i = fromIndex; i < a.length; i++ ) {\n\t\tif ( a[ i ] !== b[ i ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @param {Function} selector      Selector function.\n * @param {Function} getDependants Dependant getter returning an immutable\n *                                 reference or array of reference used in\n *                                 cache bust consideration.\n *\n * @return {Function} Memoized selector.\n */\nexport default function( selector, getDependants ) {\n\tvar rootCache, getCache;\n\n\t// Use object source as dependant if getter not provided\n\tif ( ! getDependants ) {\n\t\tgetDependants = arrayOf;\n\t}\n\n\t/**\n\t * Returns the root cache. If WeakMap is supported, this is assigned to the\n\t * root WeakMap cache set, otherwise it is a shared instance of the default\n\t * cache object.\n\t *\n\t * @return {(WeakMap|Object)} Root cache object.\n\t */\n\tfunction getRootCache() {\n\t\treturn rootCache;\n\t}\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {Array} dependants Selector dependants.\n\t *\n\t * @return {Object} Cache object.\n\t */\n\tfunction getWeakMapCache( dependants ) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti, dependant, map, cache;\n\n\t\tfor ( i = 0; i < dependants.length; i++ ) {\n\t\t\tdependant = dependants[ i ];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif ( ! isObjectLike( dependant ) ) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif ( caches.has( dependant ) ) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get( dependant );\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set( dependant, map );\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif ( ! caches.has( LEAF_KEY ) ) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set( LEAF_KEY, cache );\n\t\t}\n\n\t\treturn caches.get( LEAF_KEY );\n\t}\n\n\t// Assign cache handler by availability of WeakMap\n\tgetCache = hasWeakMap ? getWeakMapCache : getRootCache;\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = hasWeakMap ? new WeakMap() : createCache();\n\t}\n\n\t// eslint-disable-next-line jsdoc/check-param-names\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {Object} source    Source object for derivation.\n\t * @param {...*}   extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\tfunction callSelector( /* source, ...extraArgs */ ) {\n\t\tvar len = arguments.length,\n\t\t\tcache, node, i, args, dependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array( len );\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tdependants = getDependants.apply( null, args );\n\t\tcache = getCache( dependants );\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type or lack\n\t\t// of WeakMap support), shallow compare against last dependants and, if\n\t\t// references have changed, destroy cache to recalculate result.\n\t\tif ( ! cache.isUniqueByDependants ) {\n\t\t\tif ( cache.lastDependants && ! isShallowEqual( dependants, cache.lastDependants, 0 ) ) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile ( node ) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif ( ! isShallowEqual( node.args, args, 1 ) ) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif ( node !== cache.head ) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\tnode.prev.next = node.next;\n\t\t\t\tif ( node.next ) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\tcache.head.prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = {\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply( null, args ),\n\t\t};\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[ 0 ] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif ( cache.head ) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = getDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn callSelector;\n}\n","/**\n * External dependencies\n */\n\nimport { find, reject } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\nfunction replace( array, index, value ) {\n\tarray = array.slice();\n\tarray[ index ] = value;\n\treturn array;\n}\n\n/**\n * Apply a format object to a Rich Text value from the given `startIndex` to the\n * given `endIndex`. Indices are retrieved from the selection if none are\n * provided.\n *\n * @param {Object} value        Value to modify.\n * @param {Object} format       Format to apply.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the format applied.\n */\nexport function applyFormat(\n\tvalue,\n\tformat,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// The selection is collapsed.\n\tif ( startIndex === endIndex ) {\n\t\tconst startFormat = find( newFormats[ startIndex ], { type: format.type } );\n\n\t\t// If the caret is at a format of the same type, expand start and end to\n\t\t// the edges of the format. This is useful to apply new attributes.\n\t\tif ( startFormat ) {\n\t\t\tconst index = newFormats[ startIndex ].indexOf( startFormat );\n\n\t\t\twhile ( newFormats[ startIndex ] && newFormats[ startIndex ][ index ] === startFormat ) {\n\t\t\t\tnewFormats[ startIndex ] =\n\t\t\t\t\treplace( newFormats[ startIndex ], index, format );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile ( newFormats[ endIndex ] && newFormats[ endIndex ][ index ] === startFormat ) {\n\t\t\t\tnewFormats[ endIndex ] =\n\t\t\t\t\treplace( newFormats[ endIndex ], index, format );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// Determine the highest position the new format can be inserted at.\n\t\tlet position = +Infinity;\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tif ( newFormats[ index ] ) {\n\t\t\t\tnewFormats[ index ] = newFormats[ index ]\n\t\t\t\t\t.filter( ( { type } ) => type !== format.type );\n\n\t\t\t\tconst length = newFormats[ index ].length;\n\n\t\t\t\tif ( length < position ) {\n\t\t\t\t\tposition = length;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewFormats[ index ] = [];\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor ( let index = startIndex; index < endIndex; index++ ) {\n\t\t\tnewFormats[ index ].splice( position, 0, format );\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\t// Always revise active formats. This serves as a placeholder for new\n\t\t// inputs with the format so new input appears with the format applied,\n\t\t// and ensures a format of the same type uses the latest values.\n\t\tactiveFormats: [\n\t\t\t...reject( activeFormats, { type: format.type } ),\n\t\t\tformat,\n\t\t],\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { getParentLineIndex } from './get-parent-line-index';\n\n/**\n * Changes the list type of the selected indented list, if any. Looks at the\n * currently selected list item and takes the parent list, then changes the list\n * type of this list. When multiple lines are selected, the parent lists are\n * takes and changed.\n *\n * @param {Object} value     Value to change.\n * @param {Object} newFormat The new list format object. Choose between\n *                           `{ type: 'ol' }` and `{ type: 'ul' }`.\n *\n * @return {Object} The changed value.\n */\nexport function changeListType( value, newFormat ) {\n\tconst { text, replacements, start, end } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\tconst startLineFormats = replacements[ startingLineIndex ] || [];\n\tconst endLineFormats = replacements[ getLineIndex( value, end ) ] || [];\n\tconst startIndex = getParentLineIndex( value, startingLineIndex );\n\tconst newReplacements = replacements.slice();\n\tconst startCount = startLineFormats.length - 1;\n\tconst endCount = endLineFormats.length - 1;\n\n\tlet changed;\n\n\tfor ( let index = startIndex + 1 || 0; index < text.length; index++ ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( ( newReplacements[ index ] || [] ).length <= startCount ) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif ( ! newReplacements[ index ] ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchanged = true;\n\t\tnewReplacements[ index ] = newReplacements[ index ].map( ( format, i ) => {\n\t\t\treturn i < startCount || i > endCount ? format : newFormat;\n\t\t} );\n\t}\n\n\tif ( ! changed ) {\n\t\treturn value;\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newReplacements,\n\t};\n}\n","/**\n * External dependencies\n */\n\nimport {\n\tdifference,\n\tisEqual,\n\tisNil,\n\tkeys,\n\tpickBy,\n\tstartsWith,\n} from 'lodash';\n\nconst isAriaPropName = ( name ) =>\n\tstartsWith( name, 'aria-' );\n\nexport const pickAriaProps = ( props ) =>\n\tpickBy( props, ( value, key ) => isAriaPropName( key ) && ! isNil( value ) );\n\nexport const diffAriaProps = ( props, nextProps ) => {\n\tconst prevAriaKeys = keys( pickAriaProps( props ) );\n\tconst nextAriaKeys = keys( pickAriaProps( nextProps ) );\n\tconst removedKeys = difference( prevAriaKeys, nextAriaKeys );\n\tconst updatedKeys = nextAriaKeys.filter( ( key ) =>\n\t\t! isEqual( props[ key ], nextProps[ key ] ) );\n\treturn { removedKeys, updatedKeys };\n};\n","/**\n * External dependencies\n */\nimport { isEqual } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, createElement } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { diffAriaProps } from './aria';\n\nexport default class Editable extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.bindEditorNode = this.bindEditorNode.bind( this );\n\t}\n\n\t// We must prevent rerenders because the browser will modify the DOM. React\n\t// will rerender the DOM fine, but we're losing selection and it would be\n\t// more expensive to do so as it would just set the inner HTML through\n\t// `dangerouslySetInnerHTML`. Instead RichText does it's own diffing and\n\t// selection setting.\n\t//\n\t// Because we never update the component, we have to look through props and\n\t// update the attributes on the wrapper nodes here. `componentDidUpdate`\n\t// will never be called.\n\tshouldComponentUpdate( nextProps ) {\n\t\tif ( ! isEqual( this.props.style, nextProps.style ) ) {\n\t\t\tthis.editorNode.setAttribute( 'style', '' );\n\t\t\tObject.assign( this.editorNode.style, {\n\t\t\t\t...( nextProps.style || {} ),\n\t\t\t\twhiteSpace: 'pre-wrap',\n\t\t\t} );\n\t\t}\n\n\t\tif ( ! isEqual( this.props.className, nextProps.className ) ) {\n\t\t\tthis.editorNode.className = nextProps.className;\n\t\t}\n\n\t\tif ( this.props.start !== nextProps.start ) {\n\t\t\tthis.editorNode.setAttribute( 'start', nextProps.start );\n\t\t}\n\n\t\tif ( this.props.reversed !== nextProps.reversed ) {\n\t\t\tthis.editorNode.reversed = nextProps.reversed;\n\t\t}\n\n\t\tconst { removedKeys, updatedKeys } = diffAriaProps( this.props, nextProps );\n\t\tremovedKeys.forEach( ( key ) =>\n\t\t\tthis.editorNode.removeAttribute( key ) );\n\t\tupdatedKeys.forEach( ( key ) =>\n\t\t\tthis.editorNode.setAttribute( key, nextProps[ key ] ) );\n\n\t\treturn false;\n\t}\n\n\tbindEditorNode( editorNode ) {\n\t\tthis.editorNode = editorNode;\n\t\tthis.props.setRef( editorNode );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\ttagName = 'div',\n\t\t\tstyle = {},\n\t\t\trecord,\n\t\t\tvalueToEditableHTML,\n\t\t\tclassName,\n\t\t\t...remainingProps\n\t\t} = this.props;\n\n\t\tdelete remainingProps.setRef;\n\n\t\t// In HTML, leading and trailing spaces are not visible, and multiple\n\t\t// spaces elsewhere are visually reduced to one space. This rule\n\t\t// prevents spaces from collapsing so all space is visible in the editor\n\t\t// and can be removed.\n\t\t// It also prevents some browsers from inserting non-breaking spaces at\n\t\t// the end of a line to prevent the space from visually disappearing.\n\t\t// Sometimes these non breaking spaces can linger in the editor causing\n\t\t// unwanted non breaking spaces in between words. If also prevent\n\t\t// Firefox from inserting a trailing `br` node to visualise any trailing\n\t\t// space, causing the element to be saved.\n\t\t//\n\t\t// > Authors are encouraged to set the 'white-space' property on editing\n\t\t// > hosts and on markup that was originally created through these\n\t\t// > editing mechanisms to the value 'pre-wrap'. Default HTML whitespace\n\t\t// > handling is not well suited to WYSIWYG editing, and line wrapping\n\t\t// > will not work correctly in some corner cases if 'white-space' is\n\t\t// > left at its default value.\n\t\t// >\n\t\t// > https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n\t\tconst whiteSpace = 'pre-wrap';\n\n\t\treturn createElement( tagName, {\n\t\t\trole: 'textbox',\n\t\t\t'aria-multiline': true,\n\t\t\tclassName,\n\t\t\tcontentEditable: true,\n\t\t\tref: this.bindEditorNode,\n\t\t\tstyle: {\n\t\t\t\t...style,\n\t\t\t\twhiteSpace,\n\t\t\t},\n\t\t\tsuppressContentEditableWarning: true,\n\t\t\tdangerouslySetInnerHTML: { __html: valueToEditableHTML( record ) },\n\t\t\t...remainingProps,\n\t\t} );\n\t}\n}\n","/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormat } from '../get-active-format';\nimport { getActiveObject } from '../get-active-object';\n\n/**\n * Set of all interactive content tags.\n *\n * @see https://html.spec.whatwg.org/multipage/dom.html#interactive-content\n */\nconst interactiveContentTags = new Set( [\n\t'a',\n\t'audio',\n\t'button',\n\t'details',\n\t'embed',\n\t'iframe',\n\t'input',\n\t'label',\n\t'select',\n\t'textarea',\n\t'video',\n] );\n\nconst FormatEdit = ( {\n\tformatTypes,\n\tonChange,\n\tvalue,\n\tallowedFormats,\n\twithoutInteractiveFormatting,\n} ) =>\n\tformatTypes.map( ( {\n\t\tname,\n\t\tedit: Edit,\n\t\ttagName,\n\t} ) => {\n\t\tif ( ! Edit ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( allowedFormats && allowedFormats.indexOf( name ) === -1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\twithoutInteractiveFormatting &&\n\t\t\tinteractiveContentTags.has( tagName )\n\t\t) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activeFormat = getActiveFormat( value, name );\n\t\tconst isActive = activeFormat !== undefined;\n\t\tconst activeObject = getActiveObject( value );\n\t\tconst isObjectActive = activeObject !== undefined;\n\n\t\treturn (\n\t\t\t<Edit\n\t\t\t\tkey={ name }\n\t\t\t\tisActive={ isActive }\n\t\t\t\tactiveAttributes={\n\t\t\t\t\tisActive ? activeFormat.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tisObjectActive={ isObjectActive }\n\t\t\t\tactiveObjectAttributes={\n\t\t\t\t\tisObjectActive ? activeObject.attributes || {} : {}\n\t\t\t\t}\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChange }\n\t\t\t/>\n\t\t);\n\t} );\n\nexport default withSelect( ( select ) => ( {\n\tformatTypes: select( 'core/rich-text' ).getFormatTypes(),\n} ) )( FormatEdit );\n","/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport {\n\tfind,\n\tisNil,\n\tpickBy,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { BACKSPACE, DELETE, ENTER, LEFT, RIGHT, SPACE, ESCAPE } from '@wordpress/keycodes';\nimport { withSelect } from '@wordpress/data';\nimport { withSafeTimeout, compose } from '@wordpress/compose';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport Editable from './editable';\nimport { pickAriaProps } from './aria';\nimport { create } from '../create';\nimport { apply, toDom } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\n\n/**\n * Browser dependencies\n */\n\nconst { getSelection, getComputedStyle } = window;\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * Global stylesheet.\n */\nconst globalStyle = document.createElement( 'style' );\n\ndocument.head.appendChild( globalStyle );\n\nfunction createPrepareEditableTree( props, prefix ) {\n\tconst fns = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\tif ( key.startsWith( prefix ) ) {\n\t\t\taccumulator.push( props[ key ] );\n\t\t}\n\n\t\treturn accumulator;\n\t}, [] );\n\n\treturn ( value ) => fns.reduce( ( accumulator, fn ) => {\n\t\treturn fn( accumulator, value.text );\n\t}, value.formats );\n}\n\n/**\n * See export statement below.\n */\nclass RichText extends Component {\n\tconstructor( {\n\t\tvalue,\n\t\tselectionStart,\n\t\tselectionEnd,\n\t} ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.handleDelete = this.handleDelete.bind( this );\n\t\tthis.handleEnter = this.handleEnter.bind( this );\n\t\tthis.handleSpace = this.handleSpace.bind( this );\n\t\tthis.handleHorizontalNavigation = this.handleHorizontalNavigation.bind( this );\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onCreateUndoLevel = this.onCreateUndoLevel.bind( this );\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onCompositionEnd = this.onCompositionEnd.bind( this );\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.applyRecord = this.applyRecord.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.setRef = this.setRef.bind( this );\n\t\tthis.valueToEditableHTML = this.valueToEditableHTML.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.formatToValue = this.formatToValue.bind( this );\n\t\tthis.Editable = this.Editable.bind( this );\n\n\t\tthis.onKeyDown = ( event ) => {\n\t\t\tthis.handleDelete( event );\n\t\t\tthis.handleEnter( event );\n\t\t\tthis.handleSpace( event );\n\t\t\tthis.handleHorizontalNavigation( event );\n\t\t};\n\n\t\tthis.state = {};\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values are updated synchronously, unlike props and state.\n\t\tthis.value = value;\n\t\tthis.record = this.formatToValue( value );\n\t\tthis.record.start = selectionStart;\n\t\tthis.record.end = selectionEnd;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t\twindow.cancelAnimationFrame( this.rafId );\n\t}\n\n\tsetRef( node ) {\n\t\tif ( node ) {\n\t\t\tif ( process.env.NODE_ENV === 'development' ) {\n\t\t\t\tconst computedStyle = getComputedStyle( node );\n\n\t\t\t\tif ( computedStyle.display === 'inline' ) {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.warn( 'RichText cannot be used with an inline container. Please use a different tagName.' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.editableRef = node;\n\t\t} else {\n\t\t\tdelete this.editableRef;\n\t\t}\n\t}\n\n\tcreateRecord() {\n\t\tconst { __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst selection = getSelection();\n\t\tconst range = selection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: this.editableRef,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags: multilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t} );\n\t}\n\n\tapplyRecord( record, { domOnly } = {} ) {\n\t\tconst { __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tapply( {\n\t\t\tvalue: record,\n\t\t\tcurrent: this.editableRef,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags: multilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree( this.props, 'format_prepare_functions' ),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {PasteEvent} event The paste event.\n\t */\n\tonPaste( event ) {\n\t\tconst { formatTypes, onPaste } = this.props;\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tconst record = this.record;\n\t\tconst transformed = formatTypes.reduce( ( accumlator, { __unstablePasteRule } ) => {\n\t\t\t// Only allow one transform.\n\t\t\tif ( __unstablePasteRule && accumlator === record ) {\n\t\t\t\taccumlator = __unstablePasteRule( record, { html, plainText } );\n\t\t\t}\n\n\t\t\treturn accumlator;\n\t\t}, record );\n\n\t\tif ( transformed !== record ) {\n\t\t\tthis.onChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\t// Only process file if no HTML is present.\n\t\t\t// Note: a pasted file may have the URL as plain text.\n\t\t\tconst image = find( [ ...items, ...files ], ( { type } ) =>\n\t\t\t\t/^image\\/(?:jpe?g|png|gif)$/.test( type )\n\t\t\t);\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: this.removeEditorOnlyFormats( record ),\n\t\t\t\tonChange: this.onChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\timage,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tonFocus() {\n\t\tconst { unstableOnFocus } = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\tthis.recalculateBoundaryStyle();\n\n\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t// will be recalculated on the next mouseup, keyup, or touchend event.\n\t\tconst index = undefined;\n\t\tconst activeFormats = undefined;\n\n\t\tthis.record = {\n\t\t\t...this.record,\n\t\t\tstart: index,\n\t\t\tend: index,\n\t\t\tactiveFormats,\n\t\t};\n\t\tthis.props.onSelectionChange( index, index );\n\t\tthis.setState( { activeFormats } );\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\tthis.rafId = window.requestAnimationFrame( this.onSelectionChange );\n\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\n\t\tif ( this.props.setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tthis.props.setFocusedElement( this.props.instanceId );\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {SyntheticEvent} event Synthetic input event.\n\t */\n\tonInput( event ) {\n\t\t// For Input Method Editor (IME), used in Chinese, Japanese, and Korean\n\t\t// (CJK), do not trigger a change if characters are being composed.\n\t\t// Browsers setting `isComposing` to `true` will usually emit a final\n\t\t// `input` event when the characters are composed.\n\t\tif ( event && event.nativeEvent.isComposing ) {\n\t\t\t// Also don't update any selection.\n\t\t\tdocument.removeEventListener( 'selectionchange', this.onSelectionChange );\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif ( inputType && (\n\t\t\tinputType.indexOf( 'format' ) === 0 ||\n\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType )\n\t\t) ) {\n\t\t\tthis.applyRecord( this.record );\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\t\tconst { start, activeFormats = [] } = this.record;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue,\n\t\t\tstart,\n\t\t\tend: value.start,\n\t\t\tformats: activeFormats,\n\t\t} );\n\n\t\tthis.onChange( change, { withoutHistory: true } );\n\n\t\tconst {\n\t\t\t__unstableInputRule: inputRule,\n\t\t\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t\t\tformatTypes,\n\t\t\tsetTimeout,\n\t\t\tclearTimeout,\n\t\t} = this.props;\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tclearTimeout( this.onInput.timeout );\n\t\tthis.onInput.timeout = setTimeout( this.onCreateUndoLevel, 1000 );\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( inputRule ) {\n\t\t\tinputRule( change, this.valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce( ( accumlator, { __unstableInputRule } ) => {\n\t\t\tif ( __unstableInputRule ) {\n\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t}\n\n\t\t\treturn accumlator;\n\t\t}, change );\n\n\t\tif ( transformed !== change ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t\tthis.onChange( { ...transformed, activeFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tonCompositionEnd() {\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tthis.onInput();\n\t\t// Tracking selection changes can be resumed.\n\t\tdocument.addEventListener( 'selectionchange', this.onSelectionChange );\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|SyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tonSelectionChange( event ) {\n\t\tif (\n\t\t\tevent.type !== 'selectionchange' &&\n\t\t\t! this.props.__unstableIsSelected\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif (\n\t\t\tevent.nativeEvent &&\n\t\t\tevent.nativeEvent.isComposing\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = this.createRecord();\n\t\tconst value = this.record;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== value.text ) {\n\t\t\tthis.onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === value.start && end === value.end ) {\n\t\t\t// If a placeholder is set, some browsers seems to place the\n\t\t\t// selection after the placeholder instead of the text node that is\n\t\t\t// padding the empty container element. The internal selection is\n\t\t\t// set correctly to zero, but the caret is not visible. By\n\t\t\t// reapplying the value to the DOM we reset the selection to the\n\t\t\t// right node, making the caret visible again.\n\t\t\tif ( value.text.length === 0 && start === 0 ) {\n\t\t\t\tthis.applyRecord( value );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t\t\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t\t\t__unstableOnExitFormattedText: onExitFormattedText,\n\t\t} = this.props;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst activeFormats = getActiveFormats( newValue );\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = activeFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && activeFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! activeFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue, { domOnly: true } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( activeFormats.length > 0 ) {\n\t\t\tthis.recalculateBoundaryStyle();\n\t\t}\n\t}\n\n\trecalculateBoundaryStyle() {\n\t\tconst boundarySelector = '*[data-rich-text-format-boundary]';\n\t\tconst element = this.editableRef.querySelector( boundarySelector );\n\n\t\tif ( ! element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computedStyle = getComputedStyle( element );\n\t\tconst newColor = computedStyle.color\n\t\t\t.replace( ')', ', 0.2)' )\n\t\t\t.replace( 'rgb', 'rgba' );\n\t\tconst selector = `.rich-text:focus ${ boundarySelector }`;\n\t\tconst rule = `background-color: ${ newColor }`;\n\n\t\tglobalStyle.innerHTML = `${ selector } {${ rule }}`;\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  record            The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tonChange( record, { withoutHistory } = {} ) {\n\t\tthis.applyRecord( record );\n\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.record = record;\n\t\tthis.props.onChange( this.value );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t}\n\t}\n\n\tonCreateUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.__unstableOnCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif ( keyCode !== DELETE && keyCode !== BACKSPACE && keyCode !== ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.__unstableDidAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.__unstableUndo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { onDelete, __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end, text } = value;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\tif ( multilineTag ) {\n\t\t\tconst newValue = removeLineSeparator( value, isReverse );\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\tthis.onChange( remove( value ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( value ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst { onEnter } = this.props;\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: this.removeEditorOnlyFormats( this.createRecord() ),\n\t\t\tonChange: this.onChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleSpace( event ) {\n\t\tconst { tagName, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tif ( event.keyCode !== SPACE || multilineTag !== 'li' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\n\t\tif ( ! isCollapsed( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = value;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChange( indentListItems( value, { type: tagName } ) );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param  {SyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey || altKey || metaKey || ctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.record;\n\t\tconst { text, formats, start, end, activeFormats = [] } = value;\n\t\tconst collapsed = isCollapsed( value );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = getComputedStyle( this.editableRef );\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && activeFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || [];\n\t\tconst formatsAfter = formats[ start ] || [];\n\n\t\tlet newActiveFormatsLength = activeFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length < formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length > formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length > formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length < formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\t// Wait for boundary class to be added.\n\t\tthis.props.setTimeout( () => this.recalculateBoundaryStyle() );\n\n\t\tif ( newActiveFormatsLength !== activeFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = { ...value, activeFormats: newActiveFormats };\n\t\t\tthis.record = newValue;\n\t\t\tthis.applyRecord( newValue );\n\t\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue );\n\t\tthis.props.onSelectionChange( newPos, newPos );\n\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param  {SyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tonPointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif ( target === this.editableRef || target.textContent ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = target.ownerDocument.createRange();\n\t\tconst selection = getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tvalue,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tplaceholder,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\n\t\t// Check if the content changed.\n\t\tlet shouldReapply = (\n\t\t\ttagName === prevProps.tagName &&\n\t\t\tvalue !== prevProps.value &&\n\t\t\tvalue !== this.value\n\t\t);\n\n\t\t// Check if the selection changed.\n\t\tshouldReapply = shouldReapply || (\n\t\t\tisSelected && ! prevProps.isSelected && (\n\t\t\t\tthis.record.start !== selectionStart ||\n\t\t\t\tthis.record.end !== selectionEnd\n\t\t\t)\n\t\t);\n\n\t\tconst prefix = 'format_prepare_props_';\n\t\tconst predicate = ( v, key ) => key.startsWith( prefix );\n\t\tconst prepareProps = pickBy( this.props, predicate );\n\t\tconst prevPrepareProps = pickBy( prevProps, predicate );\n\n\t\t// Check if any format props changed.\n\t\tshouldReapply = shouldReapply ||\n\t\t\t! isShallowEqual( prepareProps, prevPrepareProps );\n\n\t\t// Rerender if the placeholder changed.\n\t\tshouldReapply = shouldReapply ||\n\t\t\tplaceholder !== prevProps.placeholder;\n\n\t\tconst { activeFormats = [] } = this.record;\n\n\t\tif ( shouldReapply ) {\n\t\t\tthis.value = value;\n\t\t\tthis.record = this.formatToValue( value );\n\t\t\tthis.record.start = selectionStart;\n\t\t\tthis.record.end = selectionEnd;\n\n\t\t\tupdateFormats( {\n\t\t\t\tvalue: this.record,\n\t\t\t\tstart: this.record.start,\n\t\t\t\tend: this.record.end,\n\t\t\t\tformats: activeFormats,\n\t\t\t} );\n\n\t\t\tthis.applyRecord( this.record );\n\t\t} else if (\n\t\t\tthis.record.start !== selectionStart ||\n\t\t\tthis.record.end !== selectionEnd\n\t\t) {\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} value The outside value, data type depends on props.\n\t * @return {Object} An internal rich-text value.\n\t */\n\tformatToValue( value ) {\n\t\tconst { format, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree( this.props, 'format_value_functions' );\n\n\t\tvalue = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags: multilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t} );\n\t\tvalue.formats = prepare( value );\n\n\t\treturn value;\n\t}\n\n\tvalueToEditableHTML( value ) {\n\t\tconst { __unstableMultilineTag: multilineTag } = this.props;\n\n\t\treturn toDom( {\n\t\t\tvalue,\n\t\t\tmultilineTag,\n\t\t\tprepareEditableTree: createPrepareEditableTree( this.props, 'format_prepare_functions' ),\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} ).body.innerHTML;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {Object} A new rich-text value.\n\t */\n\tremoveEditorOnlyFormats( value ) {\n\t\tthis.props.formatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tvalue = removeFormat( value, formatType.name, 0, value.text.length );\n\t\t\t}\n\t\t} );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tvalueToFormat( value ) {\n\t\tconst { format, __unstableMultilineTag: multilineTag } = this.props;\n\n\t\tvalue = this.removeEditorOnlyFormats( value );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value, multilineTag } );\n\t}\n\n\tEditable( props ) {\n\t\tconst {\n\t\t\ttagName: Tagname = 'div',\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tplaceholder,\n\t\t} = this.props;\n\t\t// Generating a key that includes `tagName` ensures that if the tag\n\t\t// changes, we replace the relevant element. This is needed because we\n\t\t// prevent Editable component updates.\n\t\tconst key = Tagname;\n\n\t\treturn (\n\t\t\t<Editable\n\t\t\t\t{ ...props }\n\t\t\t\ttagName={ Tagname }\n\t\t\t\tstyle={ style }\n\t\t\t\trecord={ this.record }\n\t\t\t\tvalueToEditableHTML={ this.valueToEditableHTML }\n\t\t\t\taria-label={ placeholder }\n\t\t\t\t{ ...pickAriaProps( this.props ) }\n\t\t\t\tclassName={ classnames( 'rich-text', className ) }\n\t\t\t\tkey={ key }\n\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\tonInput={ this.onInput }\n\t\t\t\tonCompositionEnd={ this.onCompositionEnd }\n\t\t\t\tonKeyDown={ this.onKeyDown }\n\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\tonTouchStart={ this.onPointerDown }\n\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t// Selection updates must be done at these events as they\n\t\t\t\t// happen before the `selectionchange` event. In some cases,\n\t\t\t\t// the `selectionchange` event may not even fire, for\n\t\t\t\t// example when the window receives focus again on click.\n\t\t\t\tonKeyUp={ this.onSelectionChange }\n\t\t\t\tonMouseUp={ this.onSelectionChange }\n\t\t\t\tonTouchEnd={ this.onSelectionChange }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t\tallowedFormats,\n\t\t\twithoutInteractiveFormatting,\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ isSelected && <FormatEdit\n\t\t\t\t\tallowedFormats={ allowedFormats }\n\t\t\t\t\twithoutInteractiveFormatting={ withoutInteractiveFormatting }\n\t\t\t\t\tvalue={ this.record }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t/> }\n\t\t\t\t{ children && children( {\n\t\t\t\t\tisSelected,\n\t\t\t\t\tvalue: this.record,\n\t\t\t\t\tonChange: this.onChange,\n\t\t\t\t\tEditable: this.Editable,\n\t\t\t\t} ) }\n\t\t\t\t{ ! children && <this.Editable /> }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\tformatTypes: select( 'core/rich-text' ).getFormatTypes(),\n\t} ) ),\n\twithSafeTimeout,\n] )( RichText );\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\nimport { create } from './create';\n\n/**\n * Concats a pair of rich text values. Not that this mutates `a` and does NOT\n * normalise formats!\n *\n * @param  {Object} a Value to mutate.\n * @param  {Object} b Value to add read from.\n *\n * @return {Object} `a`, mutated.\n */\nexport function mergePair( a, b ) {\n\ta.formats = a.formats.concat( b.formats );\n\ta.replacements = a.replacements.concat( b.replacements );\n\ta.text += b.text;\n\n\treturn a;\n}\n\n/**\n * Combine all Rich Text values into one. This is similar to\n * `String.prototype.concat`.\n *\n * @param {...Object} values Objects to combine.\n *\n * @return {Object} A new value combining all given records.\n */\nexport function concat( ...values ) {\n\treturn normaliseFormats( values.reduce( mergePair, create() ) );\n}\n","/**\n * Parse the given HTML into a body element.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createElement`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @param {HTMLDocument} document The HTML document to use to parse.\n * @param {string}       html     The HTML to parse.\n *\n * @return {HTMLBodyElement} Body element with parsed HTML.\n */\nexport function createElement( { implementation }, html ) {\n\t// Because `createHTMLDocument` is an expensive operation, and with this\n\t// function being internal to `rich-text` (full control in avoiding a risk\n\t// of asynchronous operations on the shared reference), a single document\n\t// is reused and reset for each call to the function.\n\tif ( ! createElement.body ) {\n\t\tcreateElement.body = implementation.createHTMLDocument( '' ).body;\n\t}\n\n\tcreateElement.body.innerHTML = html;\n\n\treturn createElement.body;\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\nimport { createElement } from './create-element';\nimport { mergePair } from './concat';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\n/**\n * Browser dependencies\n */\n\nconst { TEXT_NODE, ELEMENT_NODE } = window.Node;\n\nfunction createEmptyValue() {\n\treturn {\n\t\tformats: [],\n\t\treplacements: [],\n\t\ttext: '',\n\t};\n}\n\nfunction simpleFindKey( object, value ) {\n\tfor ( const key in object ) {\n\t\tif ( object[ key ] === value ) {\n\t\t\treturn key;\n\t\t}\n\t}\n}\n\nfunction toFormat( { type, attributes } ) {\n\tlet formatType;\n\n\tif ( attributes && attributes.class ) {\n\t\tformatType = select( 'core/rich-text' ).getFormatTypeForClassName( attributes.class );\n\n\t\tif ( formatType ) {\n\t\t\t// Preserve any additional classes.\n\t\t\tattributes.class = ` ${ attributes.class } `.replace( ` ${ formatType.className } `, ' ' ).trim();\n\n\t\t\tif ( ! attributes.class ) {\n\t\t\t\tdelete attributes.class;\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( ! formatType ) {\n\t\tformatType = select( 'core/rich-text' ).getFormatTypeForBareElement( type );\n\t}\n\n\tif ( ! formatType ) {\n\t\treturn attributes ? { type, attributes } : { type };\n\t}\n\n\tif (\n\t\tformatType.__experimentalCreatePrepareEditableTree &&\n\t\t! formatType.__experimentalCreateOnChangeEditableValue\n\t) {\n\t\treturn null;\n\t}\n\n\tif ( ! attributes ) {\n\t\treturn { type: formatType.name };\n\t}\n\n\tconst registeredAttributes = {};\n\tconst unregisteredAttributes = {};\n\n\tfor ( const name in attributes ) {\n\t\tconst key = simpleFindKey( formatType.attributes, name );\n\n\t\tif ( key ) {\n\t\t\tregisteredAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\tunregisteredAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: formatType.name,\n\t\tattributes: registeredAttributes,\n\t\tunregisteredAttributes,\n\t};\n}\n\n/**\n * Create a RichText value from an `Element` tree (DOM), an HTML string or a\n * plain text string, with optionally a `Range` object to set the selection. If\n * called without any input, an empty value will be created. If\n * `multilineTag` is provided, any content of direct children whose type matches\n * `multilineTag` will be separated by two newlines. The optional functions can\n * be used to filter out content.\n *\n * A value will have the following shape, which you are strongly encouraged not\n * to modify without the use of helper functions:\n *\n * ```js\n * {\n *   text: string,\n *   formats: Array,\n *   replacements: Array,\n *   ?start: number,\n *   ?end: number,\n * }\n * ```\n *\n * As you can see, text and formatting are separated. `text` holds the text,\n * including any replacement characters for objects and lines. `formats`,\n * `objects` and `lines` are all sparse arrays of the same length as `text`. It\n * holds information about the formatting at the relevant text indices. Finally\n * `start` and `end` state which text indices are selected. They are only\n * provided if a `Range` was given.\n *\n * @param {Object}  [$1]                      Optional named arguments.\n * @param {Element} [$1.element]              Element to create value from.\n * @param {string}  [$1.text]                 Text to create value from.\n * @param {string}  [$1.html]                 HTML to create value from.\n * @param {Range}   [$1.range]                Range to create value from.\n * @param {string}  [$1.multilineTag]         Multiline tag if the structure is\n *                                            multiline.\n * @param {Array}   [$1.multilineWrapperTags] Tags where lines can be found if\n *                                            nesting is possible.\n *\n * @return {Object} A rich text value.\n */\nexport function create( {\n\telement,\n\ttext,\n\thtml,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\t__unstableIsEditableTree: isEditableTree,\n} = {} ) {\n\tif ( typeof text === 'string' && text.length > 0 ) {\n\t\treturn {\n\t\t\tformats: Array( text.length ),\n\t\t\treplacements: Array( text.length ),\n\t\t\ttext,\n\t\t};\n\t}\n\n\tif ( typeof html === 'string' && html.length > 0 ) {\n\t\telement = createElement( document, html );\n\t}\n\n\tif ( typeof element !== 'object' ) {\n\t\treturn createEmptyValue();\n\t}\n\n\tif ( ! multilineTag ) {\n\t\treturn createFromElement( {\n\t\t\telement,\n\t\t\trange,\n\t\t\tisEditableTree,\n\t\t} );\n\t}\n\n\treturn createFromMultilineElement( {\n\t\telement,\n\t\trange,\n\t\tmultilineTag,\n\t\tmultilineWrapperTags,\n\t\tisEditableTree,\n\t} );\n}\n\n/**\n * Helper to accumulate the value's selection start and end from the current\n * node and range.\n *\n * @param {Object} accumulator Object to accumulate into.\n * @param {Node}   node        Node to create value with.\n * @param {Range}  range       Range to create value with.\n * @param {Object} value       Value that is being accumulated.\n */\nfunction accumulateSelection( accumulator, node, range, value ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { parentNode } = node;\n\tconst { startContainer, startOffset, endContainer, endOffset } = range;\n\tconst currentLength = accumulator.text.length;\n\n\t// Selection can be extracted from value.\n\tif ( value.start !== undefined ) {\n\t\taccumulator.start = currentLength + value.start;\n\t// Range indicates that the current node has selection.\n\t} else if ( node === startContainer && node.nodeType === TEXT_NODE ) {\n\t\taccumulator.start = currentLength + startOffset;\n\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset ]\n\t) {\n\t\taccumulator.start = currentLength;\n\t// Range indicates that the selection is after the current node.\n\t} else if (\n\t\tparentNode === startContainer &&\n\t\tnode === startContainer.childNodes[ startOffset - 1 ]\n\t) {\n\t\taccumulator.start = currentLength + value.text.length;\n\t// Fallback if no child inside handled the selection.\n\t} else if ( node === startContainer ) {\n\t\taccumulator.start = currentLength;\n\t}\n\n\t// Selection can be extracted from value.\n\tif ( value.end !== undefined ) {\n\t\taccumulator.end = currentLength + value.end;\n\t// Range indicates that the current node has selection.\n\t} else if ( node === endContainer && node.nodeType === TEXT_NODE ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t// Range indicates that the current node is selected.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset - 1 ]\n\t) {\n\t\taccumulator.end = currentLength + value.text.length;\n\t// Range indicates that the selection is before the current node.\n\t} else if (\n\t\tparentNode === endContainer &&\n\t\tnode === endContainer.childNodes[ endOffset ]\n\t) {\n\t\taccumulator.end = currentLength;\n\t// Fallback if no child inside handled the selection.\n\t} else if ( node === endContainer ) {\n\t\taccumulator.end = currentLength + endOffset;\n\t}\n}\n\n/**\n * Adjusts the start and end offsets from a range based on a text filter.\n *\n * @param {Node}     node   Node of which the text should be filtered.\n * @param {Range}    range  The range to filter.\n * @param {Function} filter Function to use to filter the text.\n *\n * @return {?Object} Object containing range properties.\n */\nfunction filterRange( node, range, filter ) {\n\tif ( ! range ) {\n\t\treturn;\n\t}\n\n\tconst { startContainer, endContainer } = range;\n\tlet { startOffset, endOffset } = range;\n\n\tif ( node === startContainer ) {\n\t\tstartOffset = filter( node.nodeValue.slice( 0, startOffset ) ).length;\n\t}\n\n\tif ( node === endContainer ) {\n\t\tendOffset = filter( node.nodeValue.slice( 0, endOffset ) ).length;\n\t}\n\n\treturn { startContainer, startOffset, endContainer, endOffset };\n}\n\nconst ZWNBSPRegExp = new RegExp( ZWNBSP, 'g' );\n\nfunction filterString( string ) {\n\t// Reduce any whitespace used for HTML formatting to one space\n\t// character, because it will also be displayed as such by the browser.\n\treturn string.replace( /[\\n\\r\\t]+/g, ' ' )\n\t\t// Remove padding added by `toTree`.\n\t\t.replace( ZWNBSPRegExp, '' );\n}\n\n/**\n * Creates a Rich Text value from a DOM element and range.\n *\n * @param {Object}    $1                      Named argements.\n * @param {?Element}  $1.element              Element to create value from.\n * @param {?Range}    $1.range                Range to create value from.\n * @param {?string}   $1.multilineTag         Multiline tag if the structure is\n *                                            multiline.\n * @param {?Array}    $1.multilineWrapperTags Tags where lines can be found if\n *                                            nesting is possible.\n *\n * @return {Object} A rich text value.\n */\nfunction createFromElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element ) {\n\t\treturn accumulator;\n\t}\n\n\tif ( ! element.hasChildNodes() ) {\n\t\taccumulateSelection( accumulator, element, range, createEmptyValue() );\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.childNodes.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.childNodes[ index ];\n\t\tconst type = node.nodeName.toLowerCase();\n\n\t\tif ( node.nodeType === TEXT_NODE ) {\n\t\t\tconst text = filterString( node.nodeValue );\n\t\t\trange = filterRange( node, range, filterString );\n\t\t\taccumulateSelection( accumulator, node, range, { text } );\n\t\t\t// Create a sparse array of the same length as `text`, in which\n\t\t\t// formats can be added.\n\t\t\taccumulator.formats.length += text.length;\n\t\t\taccumulator.replacements.length += text.length;\n\t\t\taccumulator.text += text;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( node.nodeType !== ELEMENT_NODE ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( isEditableTree && (\n\t\t\t// Ignore any placeholders.\n\t\t\tnode.getAttribute( 'data-rich-text-placeholder' ) ||\n\t\t\t// Ignore any line breaks that are not inserted by us.\n\t\t\t( type === 'br' && ! node.getAttribute( 'data-rich-text-line-break' ) )\n\t\t) ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( type === 'br' ) {\n\t\t\taccumulateSelection( accumulator, node, range, createEmptyValue() );\n\t\t\tmergePair( accumulator, create( { text: '\\n' } ) );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst lastFormats = accumulator.formats[ accumulator.formats.length - 1 ];\n\t\tconst lastFormat = lastFormats && lastFormats[ lastFormats.length - 1 ];\n\t\tconst newFormat = toFormat( {\n\t\t\ttype,\n\t\t\tattributes: getAttributes( { element: node } ),\n\t\t} );\n\t\tconst format = isFormatEqual( newFormat, lastFormat ) ? lastFormat : newFormat;\n\n\t\tif ( multilineWrapperTags && multilineWrapperTags.indexOf( type ) !== -1 ) {\n\t\t\tconst value = createFromMultilineElement( {\n\t\t\t\telement: node,\n\t\t\t\trange,\n\t\t\t\tmultilineTag,\n\t\t\t\tmultilineWrapperTags,\n\t\t\t\tcurrentWrapperTags: [ ...currentWrapperTags, format ],\n\t\t\t\tisEditableTree,\n\t\t\t} );\n\n\t\t\taccumulateSelection( accumulator, node, range, value );\n\t\t\tmergePair( accumulator, value );\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\n\t\tif ( ! format ) {\n\t\t\tmergePair( accumulator, value );\n\t\t} else if ( value.text.length === 0 ) {\n\t\t\tif ( format.attributes ) {\n\t\t\t\tmergePair( accumulator, {\n\t\t\t\t\tformats: [ , ],\n\t\t\t\t\treplacements: [ format ],\n\t\t\t\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\t\t\tmergePair( accumulator, {\n\t\t\t\t...value,\n\t\t\t\tformats: Array.from( value.formats, ( formats ) =>\n\t\t\t\t\tformats ? [ format, ...formats ] : [ format ]\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Creates a rich text value from a DOM element and range that should be\n * multiline.\n *\n * @param {Object}    $1                      Named argements.\n * @param {?Element}  $1.element              Element to create value from.\n * @param {?Range}    $1.range                Range to create value from.\n * @param {?string}   $1.multilineTag         Multiline tag if the structure is\n *                                            multiline.\n * @param {?Array}    $1.multilineWrapperTags Tags where lines can be found if\n *                                            nesting is possible.\n * @param {boolean}   $1.currentWrapperTags   Whether to prepend a line\n *                                            separator.\n *\n * @return {Object} A rich text value.\n */\nfunction createFromMultilineElement( {\n\telement,\n\trange,\n\tmultilineTag,\n\tmultilineWrapperTags,\n\tcurrentWrapperTags = [],\n\tisEditableTree,\n} ) {\n\tconst accumulator = createEmptyValue();\n\n\tif ( ! element || ! element.hasChildNodes() ) {\n\t\treturn accumulator;\n\t}\n\n\tconst length = element.children.length;\n\n\t// Optimise for speed.\n\tfor ( let index = 0; index < length; index++ ) {\n\t\tconst node = element.children[ index ];\n\n\t\tif ( node.nodeName.toLowerCase() !== multilineTag ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst value = createFromElement( {\n\t\t\telement: node,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags,\n\t\t\tcurrentWrapperTags,\n\t\t\tisEditableTree,\n\t\t} );\n\n\t\t// Multiline value text should be separated by a line separator.\n\t\tif ( index !== 0 || currentWrapperTags.length > 0 ) {\n\t\t\tmergePair( accumulator, {\n\t\t\t\tformats: [ , ],\n\t\t\t\treplacements: currentWrapperTags.length > 0 ? [ currentWrapperTags ] : [ , ],\n\t\t\t\ttext: LINE_SEPARATOR,\n\t\t\t} );\n\t\t}\n\n\t\taccumulateSelection( accumulator, node, range, value );\n\t\tmergePair( accumulator, value );\n\t}\n\n\treturn accumulator;\n}\n\n/**\n * Gets the attributes of an element in object shape.\n *\n * @param {Object}    $1                 Named argements.\n * @param {Element}   $1.element         Element to get attributes from.\n *\n * @return {?Object} Attribute object or `undefined` if the element has no\n *                   attributes.\n */\nfunction getAttributes( { element } ) {\n\tif ( ! element.hasAttributes() ) {\n\t\treturn;\n\t}\n\n\tconst length = element.attributes.length;\n\tlet accumulator;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst { name, value } = element.attributes[ i ];\n\n\t\tif ( name.indexOf( 'data-rich-text-' ) === 0 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\taccumulator = accumulator || {};\n\t\taccumulator[ name ] = value;\n\t}\n\n\treturn accumulator;\n}\n","/**\n * External dependencies\n */\n\nimport { find } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\n\n/**\n * Gets the format object by type at the start of the selection. This can be\n * used to get e.g. the URL of a link format at the current selection, but also\n * to check if a format is active at the selection. Returns undefined if there\n * is no format at the selection.\n *\n * @param {Object} value      Value to inspect.\n * @param {string} formatType Format type to look for.\n *\n * @return {Object|undefined} Active format object of the specified type, or undefined.\n */\nexport function getActiveFormat( value, formatType ) {\n\treturn find( getActiveFormats( value ), { type: formatType } );\n}\n","/**\n * Gets the all format objects at the start of the selection.\n *\n * @param {Object} value Value to inspect.\n *\n * @return {?Object} Active format objects.\n */\nexport function getActiveFormats( { formats, start, end, activeFormats } ) {\n\tif ( start === undefined ) {\n\t\treturn [];\n\t}\n\n\tif ( start === end ) {\n\t\t// For a collapsed caret, it is possible to override the active formats.\n\t\tif ( activeFormats ) {\n\t\t\treturn activeFormats;\n\t\t}\n\n\t\tconst formatsBefore = formats[ start - 1 ] || [];\n\t\tconst formatsAfter = formats[ start ] || [];\n\n\t\t// By default, select the lowest amount of formats possible (which means\n\t\t// the caret is positioned outside the format boundary). The user can\n\t\t// then use arrow keys to define `activeFormats`.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\treturn formatsBefore;\n\t\t}\n\n\t\treturn formatsAfter;\n\t}\n\n\treturn formats[ start ] || [];\n}\n","/**\n * Internal dependencies\n */\n\nimport { OBJECT_REPLACEMENT_CHARACTER } from './special-characters';\n\n/**\n * Gets the active object, if there is any.\n *\n * @param {Object} value Value to inspect.\n *\n * @return {?Object} Active object, or undefined.\n */\nexport function getActiveObject( { start, end, replacements, text } ) {\n\tif ( start + 1 !== end || text[ start ] !== OBJECT_REPLACEMENT_CHARACTER ) {\n\t\treturn;\n\t}\n\n\treturn replacements[ start ];\n}\n","/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Returns a registered format type.\n *\n * @param {string} name Format name.\n *\n * @return {?Object} Format type.\n */\nexport function getFormatType( name ) {\n\treturn select( 'core/rich-text' ).getFormatType( name );\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Gets the line index of the last child in the list.\n *\n * @param {Object} value     Value to search.\n * @param {number} lineIndex Line index of a list item in the list.\n *\n * @return {Array} The index of the last child.\n */\nexport function getLastChildIndex( { text, replacements }, lineIndex ) {\n\tconst lineFormats = replacements[ lineIndex ] || [];\n\t// Use the given line index in case there are no next children.\n\tlet childIndex = lineIndex;\n\n\t// `lineIndex` could be `undefined` if it's the first line.\n\tfor ( let index = lineIndex || 0; index < text.length; index++ ) {\n\t\t// We're only interested in line indices.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// If the amout of formats is equal or more, store it, then return the\n\t\t// last one if the amount of formats is less.\n\t\tif ( formatsAtIndex.length >= lineFormats.length ) {\n\t\t\tchildIndex = index;\n\t\t} else {\n\t\t\treturn childIndex;\n\t\t}\n\t}\n\n\t// If the end of the text is reached, return the last child index.\n\treturn childIndex;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Gets the currently selected line index, or the first line index if the\n * selection spans over multiple items.\n *\n * @param {Object}  value      Value to get the line index from.\n * @param {boolean} startIndex Optional index that should be contained by the\n *                             line. Defaults to the selection start of the\n *                             value.\n *\n * @return {?boolean} The line index. Undefined if not found.\n */\nexport function getLineIndex( { start, text }, startIndex = start ) {\n\tlet index = startIndex;\n\n\twhile ( index-- ) {\n\t\tif ( text[ index ] === LINE_SEPARATOR ) {\n\t\t\treturn index;\n\t\t}\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Gets the index of the first parent list. To get the parent list formats, we\n * go through every list item until we find one with exactly one format type\n * less.\n *\n * @param {Object} value     Value to search.\n * @param {number} lineIndex Line index of a child list item.\n *\n * @return {Array} The parent list line index.\n */\nexport function getParentLineIndex( { text, replacements }, lineIndex ) {\n\tconst startFormats = replacements[ lineIndex ] || [];\n\n\tlet index = lineIndex;\n\n\twhile ( index-- >= 0 ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\tif ( formatsAtIndex.length === startFormats.length - 1 ) {\n\t\t\treturn index;\n\t\t}\n\t}\n}\n","/**\n * Get the textual content of a Rich Text value. This is similar to\n * `Element.textContent`.\n *\n * @param {Object} value Value to use.\n *\n * @return {string} The text content.\n */\nexport function getTextContent( { text } ) {\n\treturn text;\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Gets the line index of the first previous list item with higher indentation.\n *\n * @param {Object} value      Value to search.\n * @param {number} lineIndex  Line index of the list item to compare with.\n *\n * @return {boolean} The line index.\n */\nfunction getTargetLevelLineIndex( { text, replacements }, lineIndex ) {\n\tconst startFormats = replacements[ lineIndex ] || [];\n\n\tlet index = lineIndex;\n\n\twhile ( index-- >= 0 ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// Return the first line index that is one level higher. If the level is\n\t\t// lower or equal, there is no result.\n\t\tif ( formatsAtIndex.length === startFormats.length + 1 ) {\n\t\t\treturn index;\n\t\t} else if ( formatsAtIndex.length <= startFormats.length ) {\n\t\t\treturn;\n\t\t}\n\t}\n}\n\n/**\n * Indents any selected list items if possible.\n *\n * @param {Object} value      Value to change.\n * @param {Object} rootFormat Root format.\n *\n * @return {Object} The changed value.\n */\nexport function indentListItems( value, rootFormat ) {\n\tconst lineIndex = getLineIndex( value );\n\n\t// There is only one line, so the line cannot be indented.\n\tif ( lineIndex === undefined ) {\n\t\treturn value;\n\t}\n\n\tconst { text, replacements, end } = value;\n\tconst previousLineIndex = getLineIndex( value, lineIndex );\n\tconst formatsAtLineIndex = replacements[ lineIndex ] || [];\n\tconst formatsAtPreviousLineIndex = replacements[ previousLineIndex ] || [];\n\n\t// The the indentation of the current line is greater than previous line,\n\t// then the line cannot be furter indented.\n\tif ( formatsAtLineIndex.length > formatsAtPreviousLineIndex.length ) {\n\t\treturn value;\n\t}\n\n\tconst newFormats = replacements.slice();\n\tconst targetLevelLineIndex = getTargetLevelLineIndex( value, lineIndex );\n\n\tfor ( let index = lineIndex; index < end; index++ ) {\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Get the previous list, and if there's a child list, take over the\n\t\t// formats. If not, duplicate the last level and create a new level.\n\t\tif ( targetLevelLineIndex ) {\n\t\t\tconst targetFormats = replacements[ targetLevelLineIndex ] || [];\n\t\t\tnewFormats[ index ] = targetFormats.concat(\n\t\t\t\t( newFormats[ index ] || [] ).slice( targetFormats.length - 1 )\n\t\t\t);\n\t\t} else {\n\t\t\tconst targetFormats = replacements[ previousLineIndex ] || [];\n\t\t\tconst lastformat = targetFormats[ targetFormats.length - 1 ] || rootFormat;\n\n\t\t\tnewFormats[ index ] = targetFormats.concat(\n\t\t\t\t[ lastformat ],\n\t\t\t\t( newFormats[ index ] || [] ).slice( targetFormats.length )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newFormats,\n\t};\n}\n","/**\n * Internal dependencies\n */\nimport './store';\n\nexport { applyFormat } from './apply-format';\nexport { concat } from './concat';\nexport { create } from './create';\nexport { getActiveFormat } from './get-active-format';\nexport { getActiveObject } from './get-active-object';\nexport { getTextContent } from './get-text-content';\nexport { isListRootSelected as __unstableIsListRootSelected } from './is-list-root-selected';\nexport { isActiveListType as __unstableIsActiveListType } from './is-active-list-type';\nexport { isCollapsed } from './is-collapsed';\nexport { isEmpty, isEmptyLine as __unstableIsEmptyLine } from './is-empty';\nexport { join } from './join';\nexport { registerFormatType } from './register-format-type';\nexport { removeFormat } from './remove-format';\nexport { remove } from './remove';\nexport { replace } from './replace';\nexport { insert } from './insert';\nexport { insertLineSeparator as __unstableInsertLineSeparator } from './insert-line-separator';\nexport { removeLineSeparator as __unstableRemoveLineSeparator } from './remove-line-separator';\nexport { insertObject } from './insert-object';\nexport { slice } from './slice';\nexport { split } from './split';\nexport { toDom as __unstableToDom } from './to-dom';\nexport { toHTMLString } from './to-html-string';\nexport { toggleFormat } from './toggle-format';\nexport { LINE_SEPARATOR as __UNSTABLE_LINE_SEPARATOR } from './special-characters';\nexport { unregisterFormatType } from './unregister-format-type';\nexport { indentListItems as __unstableIndentListItems } from './indent-list-items';\nexport { outdentListItems as __unstableOutdentListItems } from './outdent-list-items';\nexport { changeListType as __unstableChangeListType } from './change-list-type';\nexport { createElement as __unstableCreateElement } from './create-element';\n\nexport { default as __experimentalRichText } from './component';\nexport { default as __unstableFormatEdit } from './component/format-edit';\n","/**\n * Internal dependencies\n */\n\nimport { getTextContent } from './get-text-content';\nimport { insert } from './insert';\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Insert a line break character into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {Object} value        Value to modify.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the value inserted.\n */\nexport function insertLineSeparator(\n\tvalue,\n\tstartIndex = value.start,\n\tendIndex = value.end,\n) {\n\tconst beforeText = getTextContent( value ).slice( 0, startIndex );\n\tconst previousLineSeparatorIndex = beforeText.lastIndexOf( LINE_SEPARATOR );\n\tconst previousLineSeparatorFormats = value.replacements[ previousLineSeparatorIndex ];\n\tlet replacements = [ , ];\n\n\tif ( previousLineSeparatorFormats ) {\n\t\treplacements = [ previousLineSeparatorFormats ];\n\t}\n\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements,\n\t\ttext: LINE_SEPARATOR,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\n\nconst OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Insert a format as an object into a Rich Text value at the given\n * `startIndex`. Any content between `startIndex` and `endIndex` will be\n * removed. Indices are retrieved from the selection if none are provided.\n *\n * @param {Object} value          Value to modify.\n * @param {Object} formatToInsert Format to insert as object.\n * @param {number} [startIndex]   Start index.\n * @param {number} [endIndex]     End index.\n *\n * @return {Object} A new value with the object inserted.\n */\nexport function insertObject(\n\tvalue,\n\tformatToInsert,\n\tstartIndex,\n\tendIndex\n) {\n\tconst valueToInsert = {\n\t\tformats: [ , ],\n\t\treplacements: [ formatToInsert ],\n\t\ttext: OBJECT_REPLACEMENT_CHARACTER,\n\t};\n\n\treturn insert( value, valueToInsert, startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {Object}        value         Value to modify.\n * @param {Object|string} valueToInsert Value to insert.\n * @param {number}        [startIndex]  Start index.\n * @param {number}        [endIndex]    End index.\n *\n * @return {Object} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats.slice( 0, startIndex ).concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements.slice( 0, startIndex ).concat( valueToInsert.replacements, replacements.slice( endIndex ) ),\n\t\ttext: text.slice( 0, startIndex ) + valueToInsert.text + text.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Wether or not the selected list has the given tag name.\n *\n * @param {Object}  value    The value to check.\n * @param {string}  type     The tag name the list should have.\n * @param {string}  rootType The current root tag name, to compare with in case\n *                           nothing is selected.\n *\n * @return {boolean} True if the current list type matches `type`, false if not.\n */\nexport function isActiveListType( value, type, rootType ) {\n\tconst { replacements, start } = value;\n\tconst lineIndex = getLineIndex( value, start );\n\tconst replacement = replacements[ lineIndex ];\n\n\tif ( ! replacement || replacement.length === 0 ) {\n\t\treturn type === rootType;\n\t}\n\n\tconst lastFormat = replacement[ replacement.length - 1 ];\n\n\treturn lastFormat.type === type;\n}\n","/**\n * Check if the selection of a Rich Text value is collapsed or not. Collapsed\n * means that no characters are selected, but there is a caret present. If there\n * is no selection, `undefined` will be returned. This is similar to\n * `window.getSelection().isCollapsed()`.\n *\n * @param {Object} value The rich text value to check.\n *\n * @return {boolean|undefined} True if the selection is collapsed, false if not,\n *                             undefined if there is no selection.\n */\nexport function isCollapsed( { start, end } ) {\n\tif ( start === undefined || end === undefined ) {\n\t\treturn;\n\t}\n\n\treturn start === end;\n}\n","/**\n * Internal dependencies\n */\nimport { LINE_SEPARATOR } from './special-characters';\n\n/**\n * Check if a Rich Text value is Empty, meaning it contains no text or any\n * objects (such as images).\n *\n * @param {Object} value Value to use.\n *\n * @return {boolean} True if the value is empty, false if not.\n */\nexport function isEmpty( { text } ) {\n\treturn text.length === 0;\n}\n\n/**\n * Check if the current collapsed selection is on an empty line in case of a\n * multiline value.\n *\n * @param  {Object} value Value te check.\n *\n * @return {boolean} True if the line is empty, false if not.\n */\nexport function isEmptyLine( { text, start, end } ) {\n\tif ( start !== end ) {\n\t\treturn false;\n\t}\n\n\tif ( text.length === 0 ) {\n\t\treturn true;\n\t}\n\n\tif ( start === 0 && text.slice( 0, 1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\tif ( start === text.length && text.slice( -1 ) === LINE_SEPARATOR ) {\n\t\treturn true;\n\t}\n\n\treturn text.slice( start - 1, end + 1 ) === `${ LINE_SEPARATOR }${ LINE_SEPARATOR }`;\n}\n","/**\n * Optimised equality check for format objects.\n *\n * @param {?Object} format1 Format to compare.\n * @param {?Object} format2 Format to compare.\n *\n * @return {boolean} True if formats are equal, false if not.\n */\nexport function isFormatEqual( format1, format2 ) {\n\t// Both not defined.\n\tif ( format1 === format2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! format1 || ! format2 ) {\n\t\treturn false;\n\t}\n\n\tif ( format1.type !== format2.type ) {\n\t\treturn false;\n\t}\n\n\tconst attributes1 = format1.attributes;\n\tconst attributes2 = format2.attributes;\n\n\t// Both not defined.\n\tif ( attributes1 === attributes2 ) {\n\t\treturn true;\n\t}\n\n\t// Either not defined.\n\tif ( ! attributes1 || ! attributes2 ) {\n\t\treturn false;\n\t}\n\n\tconst keys1 = Object.keys( attributes1 );\n\tconst keys2 = Object.keys( attributes2 );\n\n\tif ( keys1.length !== keys2.length ) {\n\t\treturn false;\n\t}\n\n\tconst length = keys1.length;\n\n\t// Optimise for speed.\n\tfor ( let i = 0; i < length; i++ ) {\n\t\tconst name = keys1[ i ];\n\n\t\tif ( attributes1[ name ] !== attributes2[ name ] ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getLineIndex } from './get-line-index';\n\n/**\n * Whether or not the root list is selected.\n *\n * @param {Object} value The value to check.\n *\n * @return {boolean} True if the root list or nothing is selected, false if an\n *                   inner list is selected.\n */\nexport function isListRootSelected( value ) {\n\tconst { replacements, start } = value;\n\tconst lineIndex = getLineIndex( value, start );\n\tconst replacement = replacements[ lineIndex ];\n\n\treturn ! replacement || replacement.length < 1;\n}\n","/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Combine an array of Rich Text values into one, optionally separated by\n * `separator`, which can be a Rich Text value, HTML string, or plain text\n * string. This is similar to `Array.prototype.join`.\n *\n * @param {Array<Object>} values      An array of values to join.\n * @param {string|Object} [separator] Separator string or value.\n *\n * @return {Object} A new combined value.\n */\nexport function join( values, separator = '' ) {\n\tif ( typeof separator === 'string' ) {\n\t\tseparator = create( { text: separator } );\n\t}\n\n\treturn normaliseFormats( values.reduce( ( accumlator, { formats, replacements, text } ) => ( {\n\t\tformats: accumlator.formats.concat( separator.formats, formats ),\n\t\treplacements: accumlator.replacements.concat( separator.replacements, replacements ),\n\t\ttext: accumlator.text + separator.text + text,\n\t} ) ) );\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Normalises formats: ensures subsequent adjacent equal formats have the same\n * reference.\n *\n * @param {Object} value Value to normalise formats of.\n *\n * @return {Object} New value with normalised formats.\n */\nexport function normaliseFormats( value ) {\n\tconst newFormats = value.formats.slice();\n\n\tnewFormats.forEach( ( formatsAtIndex, index ) => {\n\t\tconst formatsAtPreviousIndex = newFormats[ index - 1 ];\n\n\t\tif ( formatsAtPreviousIndex ) {\n\t\t\tconst newFormatsAtIndex = formatsAtIndex.slice();\n\n\t\t\tnewFormatsAtIndex.forEach( ( format, formatIndex ) => {\n\t\t\t\tconst previousFormat = formatsAtPreviousIndex[ formatIndex ];\n\n\t\t\t\tif ( isFormatEqual( format, previousFormat ) ) {\n\t\t\t\t\tnewFormatsAtIndex[ formatIndex ] = previousFormat;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnewFormats[ index ] = newFormatsAtIndex;\n\t\t}\n\t} );\n\n\treturn {\n\t\t...value,\n\t\tformats: newFormats,\n\t};\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { getLineIndex } from './get-line-index';\nimport { getParentLineIndex } from './get-parent-line-index';\nimport { getLastChildIndex } from './get-last-child-index';\n\n/**\n * Outdents any selected list items if possible.\n *\n * @param {Object} value Value to change.\n *\n * @return {Object} The changed value.\n */\nexport function outdentListItems( value ) {\n\tconst { text, replacements, start, end } = value;\n\tconst startingLineIndex = getLineIndex( value, start );\n\n\t// Return early if the starting line index cannot be further outdented.\n\tif ( replacements[ startingLineIndex ] === undefined ) {\n\t\treturn value;\n\t}\n\n\tconst newFormats = replacements.slice( 0 );\n\tconst parentFormats = replacements[ getParentLineIndex( value, startingLineIndex ) ] || [];\n\tconst endingLineIndex = getLineIndex( value, end );\n\tconst lastChildIndex = getLastChildIndex( value, endingLineIndex );\n\n\t// Outdent all list items from the starting line index until the last child\n\t// index of the ending list. All children of the ending list need to be\n\t// outdented, otherwise they'll be orphaned.\n\tfor ( let index = startingLineIndex; index <= lastChildIndex; index++ ) {\n\t\t// Skip indices that are not line separators.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// In the case of level 0, the formats at the index are undefined.\n\t\tconst currentFormats = newFormats[ index ] || [];\n\n\t\t// Omit the indentation level where the selection starts.\n\t\tnewFormats[ index ] = parentFormats.concat(\n\t\t\tcurrentFormats.slice( parentFormats.length + 1 )\n\t\t);\n\n\t\tif ( newFormats[ index ].length === 0 ) {\n\t\t\tdelete newFormats[ index ];\n\t\t}\n\t}\n\n\treturn {\n\t\t...value,\n\t\treplacements: newFormats,\n\t};\n}\n","/**\n * External dependencies\n */\nimport { mapKeys } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { select, dispatch, withSelect, withDispatch } from '@wordpress/data';\nimport { addFilter } from '@wordpress/hooks';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Registers a new format provided a unique name and an object defining its\n * behavior.\n *\n * @param {string}   name                 Format name.\n * @param {Object}   settings             Format settings.\n * @param {string}   settings.tagName     The HTML tag this format will wrap the selection with.\n * @param {string}   [settings.className] A class to match the format.\n * @param {string}   settings.title       Name of the format.\n * @param {Function} settings.edit        Should return a component for the user to interact with the new registered format.\n *\n * @return {WPFormat|undefined} The format, if it has been successfully registered;\n *                              otherwise `undefined`.\n */\nexport function registerFormatType( name, settings ) {\n\tsettings = {\n\t\tname,\n\t\t...settings,\n\t};\n\n\tif ( typeof settings.name !== 'string' ) {\n\t\twindow.console.error(\n\t\t\t'Format names must be strings.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[a-z][a-z0-9-]*\\/[a-z][a-z0-9-]*$/.test( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: my-plugin/my-custom-format'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( select( 'core/rich-text' ).getFormatType( settings.name ) ) {\n\t\twindow.console.error(\n\t\t\t'Format \"' + settings.name + '\" is already registered.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif (\n\t\ttypeof settings.tagName !== 'string' ||\n\t\tsettings.tagName === ''\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format tag names must be a string.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif (\n\t\t( typeof settings.className !== 'string' || settings.className === '' ) &&\n\t\tsettings.className !== null\n\t) {\n\t\twindow.console.error(\n\t\t\t'Format class names must be a string, or null to handle bare elements.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( ! /^[_a-zA-Z]+[a-zA-Z0-9-]*$/.test( settings.className ) ) {\n\t\twindow.console.error(\n\t\t\t'A class name must begin with a letter, followed by any number of hyphens, letters, or numbers.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( settings.className === null ) {\n\t\tconst formatTypeForBareElement = select( 'core/rich-text' )\n\t\t\t.getFormatTypeForBareElement( settings.tagName );\n\n\t\tif ( formatTypeForBareElement ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForBareElement.name }\" is already registered to handle bare tag name \"${ settings.tagName }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\tconst formatTypeForClassName = select( 'core/rich-text' )\n\t\t\t.getFormatTypeForClassName( settings.className );\n\n\t\tif ( formatTypeForClassName ) {\n\t\t\twindow.console.error(\n\t\t\t\t`Format \"${ formatTypeForClassName.name }\" is already registered to handle class name \"${ settings.className }\".`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif ( ! ( 'title' in settings ) || settings.title === '' ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" must have a title.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( 'keywords' in settings && settings.keywords.length > 3 ) {\n\t\twindow.console.error(\n\t\t\t'The format \"' + settings.name + '\" can have a maximum of 3 keywords.'\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( typeof settings.title !== 'string' ) {\n\t\twindow.console.error(\n\t\t\t'Format titles must be strings.'\n\t\t);\n\t\treturn;\n\t}\n\n\tdispatch( 'core/rich-text' ).addFormatTypes( settings );\n\n\tif ( settings.__experimentalCreatePrepareEditableTree ) {\n\t\taddFilter( 'experimentalRichText', name, ( OriginalComponent ) => {\n\t\t\tconst selectPrefix = `format_prepare_props_(${ name })_`;\n\t\t\tconst dispatchPrefix = `format_on_change_props_(${ name })_`;\n\n\t\t\tconst Component = ( props ) => {\n\t\t\t\tconst newProps = { ...props };\n\t\t\t\tconst propsByPrefix = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\t\t\t\tif ( key.startsWith( selectPrefix ) ) {\n\t\t\t\t\t\taccumulator[ key.slice( selectPrefix.length ) ] = props[ key ];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( key.startsWith( dispatchPrefix ) ) {\n\t\t\t\t\t\taccumulator[ key.slice( dispatchPrefix.length ) ] = props[ key ];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}, {} );\n\t\t\t\tconst args = {\n\t\t\t\t\trichTextIdentifier: props.identifier,\n\t\t\t\t\tblockClientId: props.clientId,\n\t\t\t\t};\n\n\t\t\t\tif ( settings.__experimentalCreateOnChangeEditableValue ) {\n\t\t\t\t\tnewProps[ `format_value_functions_(${ name })` ] =\n\t\t\t\t\t\tsettings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t\tnewProps[ `format_on_change_functions_(${ name })` ] =\n\t\t\t\t\t\tsettings.__experimentalCreateOnChangeEditableValue(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tnewProps[ `format_prepare_functions_(${ name })` ] =\n\t\t\t\t\t\tsettings.__experimentalCreatePrepareEditableTree(\n\t\t\t\t\t\t\tpropsByPrefix,\n\t\t\t\t\t\t\targs\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn <OriginalComponent { ...newProps } />;\n\t\t\t};\n\n\t\t\tconst hocs = [];\n\n\t\t\tif ( settings.__experimentalGetPropsForEditableTreePreparation ) {\n\t\t\t\thocs.push( withSelect( ( sel, { clientId, identifier } ) =>\n\t\t\t\t\tmapKeys(\n\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreePreparation( sel, {\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\t( value, key ) => selectPrefix + key\n\t\t\t\t\t)\n\t\t\t\t) );\n\t\t\t}\n\n\t\t\tif ( settings.__experimentalGetPropsForEditableTreeChangeHandler ) {\n\t\t\t\thocs.push( withDispatch( ( disp, { clientId, identifier } ) =>\n\t\t\t\t\tmapKeys(\n\t\t\t\t\t\tsettings.__experimentalGetPropsForEditableTreeChangeHandler( disp, {\n\t\t\t\t\t\t\trichTextIdentifier: identifier,\n\t\t\t\t\t\t\tblockClientId: clientId,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\t( value, key ) => dispatchPrefix + key\n\t\t\t\t\t)\n\t\t\t\t) );\n\t\t\t}\n\n\t\t\treturn hocs.length ? compose( hocs )( Component ) : Component;\n\t\t} );\n\t}\n\n\treturn settings;\n}\n","/**\n * External dependencies\n */\n\nimport { find, reject } from 'lodash';\n\n/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Remove any format object from a Rich Text value by type from the given\n * `startIndex` to the given `endIndex`. Indices are retrieved from the\n * selection if none are provided.\n *\n * @param {Object} value        Value to modify.\n * @param {string} formatType   Format type to remove.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the format applied.\n */\nexport function removeFormat(\n\tvalue,\n\tformatType,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, activeFormats } = value;\n\tconst newFormats = formats.slice();\n\n\t// If the selection is collapsed, expand start and end to the edges of the\n\t// format.\n\tif ( startIndex === endIndex ) {\n\t\tconst format = find( newFormats[ startIndex ], { type: formatType } );\n\n\t\tif ( format ) {\n\t\t\twhile ( find( newFormats[ startIndex ], format ) ) {\n\t\t\t\tfilterFormats( newFormats, startIndex, formatType );\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tendIndex++;\n\n\t\t\twhile ( find( newFormats[ endIndex ], format ) ) {\n\t\t\t\tfilterFormats( newFormats, endIndex, formatType );\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor ( let i = startIndex; i < endIndex; i++ ) {\n\t\t\tif ( newFormats[ i ] ) {\n\t\t\t\tfilterFormats( newFormats, i, formatType );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn normaliseFormats( {\n\t\t...value,\n\t\tformats: newFormats,\n\t\tactiveFormats: reject( activeFormats, { type: formatType } ),\n\t} );\n}\n\nfunction filterFormats( formats, index, formatType ) {\n\tconst newFormats = formats[ index ].filter( ( { type } ) => type !== formatType );\n\n\tif ( newFormats.length ) {\n\t\tformats[ index ] = newFormats;\n\t} else {\n\t\tdelete formats[ index ];\n\t}\n}\n","/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\nimport { isCollapsed } from './is-collapsed';\nimport { remove } from './remove';\n\n/**\n * Removes a line separator character, if existing, from a Rich Text value at the current\n * indices. If no line separator exists on the indices it will return undefined.\n *\n * @param {Object} value Value to modify.\n * @param {boolean} backward indicates if are removing from the start index or the end index.\n *\n * @return {Object|undefined} A new value with the line separator removed. Or undefined if no line separator is found on the position.\n */\nexport function removeLineSeparator(\n\tvalue,\n\tbackward = true,\n) {\n\tconst { replacements, text, start, end } = value;\n\tconst collapsed = isCollapsed( value );\n\tlet index = start - 1;\n\tlet removeStart = collapsed ? start - 1 : start;\n\tlet removeEnd = end;\n\tif ( ! backward ) {\n\t\tindex = end;\n\t\tremoveStart = start;\n\t\tremoveEnd = collapsed ? end + 1 : end;\n\t}\n\n\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\treturn;\n\t}\n\n\tlet newValue;\n\t// If the line separator that is about te be removed\n\t// contains wrappers, remove the wrappers first.\n\tif ( collapsed && replacements[ index ] && replacements[ index ].length ) {\n\t\tconst newReplacements = replacements.slice();\n\n\t\tnewReplacements[ index ] = replacements[ index ].slice( 0, -1 );\n\t\tnewValue = {\n\t\t\t...value,\n\t\t\treplacements: newReplacements,\n\t\t};\n\t} else {\n\t\tnewValue = remove(\n\t\t\tvalue,\n\t\t\tremoveStart,\n\t\t\tremoveEnd\n\t\t);\n\t}\n\treturn newValue;\n}\n","/**\n * Internal dependencies\n */\n\nimport { insert } from './insert';\nimport { create } from './create';\n\n/**\n * Remove content from a Rich Text value between the given `startIndex` and\n * `endIndex`. Indices are retrieved from the selection if none are provided.\n *\n * @param {Object} value        Value to modify.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new value with the content removed.\n */\nexport function remove( value, startIndex, endIndex ) {\n\treturn insert( value, create(), startIndex, endIndex );\n}\n","/**\n * Internal dependencies\n */\n\nimport { normaliseFormats } from './normalise-formats';\n\n/**\n * Search a Rich Text value and replace the match(es) with `replacement`. This\n * is similar to `String.prototype.replace`.\n *\n * @param {Object}         value        The value to modify.\n * @param {RegExp|string}  pattern      A RegExp object or literal. Can also be\n *                                      a string. It is treated as a verbatim\n *                                      string and is not interpreted as a\n *                                      regular expression. Only the first\n *                                      occurrence will be replaced.\n * @param {Function|string} replacement The match or matches are replaced with\n *                                      the specified or the value returned by\n *                                      the specified function.\n *\n * @return {Object} A new value with replacements applied.\n */\nexport function replace( { formats, replacements, text, start, end }, pattern, replacement ) {\n\ttext = text.replace( pattern, ( match, ...rest ) => {\n\t\tconst offset = rest[ rest.length - 2 ];\n\t\tlet newText = replacement;\n\t\tlet newFormats;\n\t\tlet newReplacements;\n\n\t\tif ( typeof newText === 'function' ) {\n\t\t\tnewText = replacement( match, ...rest );\n\t\t}\n\n\t\tif ( typeof newText === 'object' ) {\n\t\t\tnewFormats = newText.formats;\n\t\t\tnewReplacements = newText.replacements;\n\t\t\tnewText = newText.text;\n\t\t} else {\n\t\t\tnewFormats = Array( newText.length );\n\t\t\tnewReplacements = Array( newText.length );\n\n\t\t\tif ( formats[ offset ] ) {\n\t\t\t\tnewFormats = newFormats.fill( formats[ offset ] );\n\t\t\t}\n\t\t}\n\n\t\tformats = formats.slice( 0, offset ).concat( newFormats, formats.slice( offset + match.length ) );\n\t\treplacements = replacements.slice( 0, offset ).concat( newReplacements, replacements.slice( offset + match.length ) );\n\n\t\tif ( start ) {\n\t\t\tstart = end = offset + newText.length;\n\t\t}\n\n\t\treturn newText;\n\t} );\n\n\treturn normaliseFormats( { formats, replacements, text, start, end } );\n}\n","/**\n * Slice a Rich Text value from `startIndex` to `endIndex`. Indices are\n * retrieved from the selection if none are provided. This is similar to\n * `String.prototype.slice`.\n *\n * @param {Object} value        Value to modify.\n * @param {number} [startIndex] Start index.\n * @param {number} [endIndex]   End index.\n *\n * @return {Object} A new extracted value.\n */\nexport function slice(\n\tvalue,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( startIndex === undefined || endIndex === undefined ) {\n\t\treturn { ...value };\n\t}\n\n\treturn {\n\t\tformats: formats.slice( startIndex, endIndex ),\n\t\treplacements: replacements.slice( startIndex, endIndex ),\n\t\ttext: text.slice( startIndex, endIndex ),\n\t};\n}\n","/**\n * Line separator character, used for multiline text.\n */\nexport const LINE_SEPARATOR = '\\u2028';\n\n/**\n * Object replacement character, used as a placeholder for objects.\n */\nexport const OBJECT_REPLACEMENT_CHARACTER = '\\ufffc';\n\n/**\n * Zero width non-breaking space, used as padding in the editable DOM tree when\n * it is empty otherwise.\n */\nexport const ZWNBSP = '\\ufeff';\n","/**\n * Internal dependencies\n */\n\nimport { replace } from './replace';\n\n/**\n * Split a Rich Text value in two at the given `startIndex` and `endIndex`, or\n * split at the given separator. This is similar to `String.prototype.split`.\n * Indices are retrieved from the selection if none are provided.\n *\n * @param {Object}        value\n * @param {Object[]}      value.formats\n * @param {Object[]}      value.replacements\n * @param {string}        value.text\n * @param {number}        value.start\n * @param {number}        value.end\n * @param {number|string} [string] Start index, or string at which to split.\n *\n * @return {Array} An array of new values.\n */\nexport function split( { formats, replacements, text, start, end }, string ) {\n\tif ( typeof string !== 'string' ) {\n\t\treturn splitAtSelection( ...arguments );\n\t}\n\n\tlet nextStart = 0;\n\n\treturn text.split( string ).map( ( substring ) => {\n\t\tconst startIndex = nextStart;\n\t\tconst value = {\n\t\t\tformats: formats.slice( startIndex, startIndex + substring.length ),\n\t\t\treplacements: replacements.slice( startIndex, startIndex + substring.length ),\n\t\t\ttext: substring,\n\t\t};\n\n\t\tnextStart += string.length + substring.length;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\t\t\tif ( start >= startIndex && start < nextStart ) {\n\t\t\t\tvalue.start = start - startIndex;\n\t\t\t} else if ( start < startIndex && end > startIndex ) {\n\t\t\t\tvalue.start = 0;\n\t\t\t}\n\n\t\t\tif ( end >= startIndex && end < nextStart ) {\n\t\t\t\tvalue.end = end - startIndex;\n\t\t\t} else if ( start < nextStart && end > nextStart ) {\n\t\t\t\tvalue.end = substring.length;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} );\n}\n\nfunction splitAtSelection(\n\t{ formats, replacements, text, start, end },\n\tstartIndex = start,\n\tendIndex = end\n) {\n\tconst before = {\n\t\tformats: formats.slice( 0, startIndex ),\n\t\treplacements: replacements.slice( 0, startIndex ),\n\t\ttext: text.slice( 0, startIndex ),\n\t};\n\tconst after = {\n\t\tformats: formats.slice( endIndex ),\n\t\treplacements: replacements.slice( endIndex ),\n\t\ttext: text.slice( endIndex ),\n\t\tstart: 0,\n\t\tend: 0,\n\t};\n\n\treturn [\n\t\t// Ensure newlines are trimmed.\n\t\treplace( before, /\\u2028+$/, '' ),\n\t\treplace( after, /^\\u2028+/, '' ),\n\t];\n}\n","/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/**\n * Returns an action object used in signalling that format types have been\n * added.\n *\n * @param {Array|Object} formatTypes Format types received.\n *\n * @return {Object} Action object.\n */\nexport function addFormatTypes( formatTypes ) {\n\treturn {\n\t\ttype: 'ADD_FORMAT_TYPES',\n\t\tformatTypes: castArray( formatTypes ),\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered format type.\n *\n * @param {string|Array} names Format name.\n *\n * @return {Object} Action object.\n */\nexport function removeFormatTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_FORMAT_TYPES',\n\t\tnames: castArray( names ),\n\t};\n}\n","/**\n * WordPress dependencies\n */\nimport { registerStore } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport reducer from './reducer';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\n\nregisterStore( 'core/rich-text', { reducer, selectors, actions } );\n","/**\n * External dependencies\n */\nimport { keyBy, omit } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer managing the format types\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function formatTypes( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_FORMAT_TYPES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...keyBy( action.formatTypes, 'name' ),\n\t\t\t};\n\t\tcase 'REMOVE_FORMAT_TYPES':\n\t\t\treturn omit( state, action.names );\n\t}\n\n\treturn state;\n}\n\nexport default combineReducers( { formatTypes } );\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\nimport { find } from 'lodash';\n\n/**\n * Returns all the available format types.\n *\n * @param {Object} state Data state.\n *\n * @return {Array} Format types.\n */\nexport const getFormatTypes = createSelector(\n\t( state ) => Object.values( state.formatTypes ),\n\t( state ) => [\n\t\tstate.formatTypes,\n\t]\n);\n\n/**\n * Returns a format type by name.\n *\n * @param {Object} state Data state.\n * @param {string} name Format type name.\n *\n * @return {Object?} Format type.\n */\nexport function getFormatType( state, name ) {\n\treturn state.formatTypes[ name ];\n}\n\n/**\n * Gets the format type, if any, that can handle a bare element (without a\n * data-format-type attribute), given the tag name of this element.\n *\n * @param {Object} state              Data state.\n * @param {string} bareElementTagName The tag name of the element to find a\n *                                    format type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForBareElement( state, bareElementTagName ) {\n\treturn find( getFormatTypes( state ), ( { className, tagName } ) => {\n\t\treturn className === null && bareElementTagName === tagName;\n\t} );\n}\n\n/**\n * Gets the format type, if any, that can handle an element, given its classes.\n *\n * @param {Object} state            Data state.\n * @param {string} elementClassName The classes of the element to find a format\n *                                  type for.\n * @return {?Object} Format type.\n */\nexport function getFormatTypeForClassName( state, elementClassName ) {\n\treturn find( getFormatTypes( state ), ( { className } ) => {\n\t\tif ( className === null ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ` ${ elementClassName } `.indexOf( ` ${ className } ` ) >= 0;\n\t} );\n}\n","/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\nimport { createElement } from './create-element';\n\n/**\n * Browser dependencies\n */\n\nconst { TEXT_NODE } = window.Node;\n\n/**\n * Creates a path as an array of indices from the given root node to the given\n * node.\n *\n * @param {Node}        node     Node to find the path of.\n * @param {HTMLElement} rootNode Root node to find the path from.\n * @param {Array}       path     Initial path to build on.\n *\n * @return {Array} The path from the root node to the node.\n */\nfunction createPathToNode( node, rootNode, path ) {\n\tconst parentNode = node.parentNode;\n\tlet i = 0;\n\n\twhile ( ( node = node.previousSibling ) ) {\n\t\ti++;\n\t}\n\n\tpath = [ i, ...path ];\n\n\tif ( parentNode !== rootNode ) {\n\t\tpath = createPathToNode( parentNode, rootNode, path );\n\t}\n\n\treturn path;\n}\n\n/**\n * Gets a node given a path (array of indices) from the given node.\n *\n * @param {HTMLElement} node Root node to find the wanted node in.\n * @param {Array}       path Path (indices) to the wanted node.\n *\n * @return {Object} Object with the found node and the remaining offset (if any).\n */\nfunction getNodeByPath( node, path ) {\n\tpath = [ ...path ];\n\n\twhile ( node && path.length > 1 ) {\n\t\tnode = node.childNodes[ path.shift() ];\n\t}\n\n\treturn {\n\t\tnode,\n\t\toffset: path[ 0 ],\n\t};\n}\n\n/**\n * Returns a new instance of a DOM tree upon which RichText operations can be\n * applied.\n *\n * Note: The current implementation will return a shared reference, reset on\n * each call to `createEmpty`. Therefore, you should not hold a reference to\n * the value to operate upon asynchronously, as it may have unexpected results.\n *\n * @return {WPRichTextTree} RichText tree.\n */\nconst createEmpty = () => createElement( document, '' );\n\nfunction append( element, child ) {\n\tif ( typeof child === 'string' ) {\n\t\tchild = element.ownerDocument.createTextNode( child );\n\t}\n\n\tconst { type, attributes } = child;\n\n\tif ( type ) {\n\t\tchild = element.ownerDocument.createElement( type );\n\n\t\tfor ( const key in attributes ) {\n\t\t\tchild.setAttribute( key, attributes[ key ] );\n\t\t}\n\t}\n\n\treturn element.appendChild( child );\n}\n\nfunction appendText( node, text ) {\n\tnode.appendData( text );\n}\n\nfunction getLastChild( { lastChild } ) {\n\treturn lastChild;\n}\n\nfunction getParent( { parentNode } ) {\n\treturn parentNode;\n}\n\nfunction isText( { nodeType } ) {\n\treturn nodeType === TEXT_NODE;\n}\n\nfunction getText( { nodeValue } ) {\n\treturn nodeValue;\n}\n\nfunction remove( node ) {\n\treturn node.parentNode.removeChild( node );\n}\n\nexport function toDom( {\n\tvalue,\n\tmultilineTag,\n\tprepareEditableTree,\n\tisEditableTree = true,\n\tplaceholder,\n} ) {\n\tlet startPath = [];\n\tlet endPath = [];\n\n\tif ( prepareEditableTree ) {\n\t\tvalue = {\n\t\t\t...value,\n\t\t\tformats: prepareEditableTree( value ),\n\t\t};\n\t}\n\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t\tonStartIndex( body, pointer ) {\n\t\t\tstartPath = createPathToNode( pointer, body, [ pointer.nodeValue.length ] );\n\t\t},\n\t\tonEndIndex( body, pointer ) {\n\t\t\tendPath = createPathToNode( pointer, body, [ pointer.nodeValue.length ] );\n\t\t},\n\t\tisEditableTree,\n\t\tplaceholder,\n\t} );\n\n\treturn {\n\t\tbody: tree,\n\t\tselection: { startPath, endPath },\n\t};\n}\n\n/**\n * Create an `Element` tree from a Rich Text value and applies the difference to\n * the `Element` tree contained by `current`. If a `multilineTag` is provided,\n * text separated by two new lines will be wrapped in an `Element` of that type.\n *\n * @param {Object}      $1                        Named arguments.\n * @param {Object}      $1.value                  Value to apply.\n * @param {HTMLElement} $1.current                The live root node to apply the element tree to.\n * @param {string}      [$1.multilineTag]         Multiline tag.\n * @param {Array}       [$1.multilineWrapperTags] Tags where lines can be found if nesting is possible.\n */\nexport function apply( {\n\tvalue,\n\tcurrent,\n\tmultilineTag,\n\tprepareEditableTree,\n\t__unstableDomOnly,\n\tplaceholder,\n} ) {\n\t// Construct a new element tree in memory.\n\tconst { body, selection } = toDom( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tprepareEditableTree,\n\t\tplaceholder,\n\t} );\n\n\tapplyValue( body, current );\n\n\tif ( value.start !== undefined && ! __unstableDomOnly ) {\n\t\tapplySelection( selection, current );\n\t}\n}\n\nexport function applyValue( future, current ) {\n\tlet i = 0;\n\tlet futureChild;\n\n\twhile ( ( futureChild = future.firstChild ) ) {\n\t\tconst currentChild = current.childNodes[ i ];\n\n\t\tif ( ! currentChild ) {\n\t\t\tcurrent.appendChild( futureChild );\n\t\t} else if ( ! currentChild.isEqualNode( futureChild ) ) {\n\t\t\tif (\n\t\t\t\tcurrentChild.nodeName !== futureChild.nodeName ||\n\t\t\t\t( currentChild.nodeType === TEXT_NODE && currentChild.data !== futureChild.data )\n\t\t\t) {\n\t\t\t\tcurrent.replaceChild( futureChild, currentChild );\n\t\t\t} else {\n\t\t\t\tconst currentAttributes = currentChild.attributes;\n\t\t\t\tconst futureAttributes = futureChild.attributes;\n\n\t\t\t\tif ( currentAttributes ) {\n\t\t\t\t\tlet ii = currentAttributes.length;\n\n\t\t\t\t\t// Reverse loop because `removeAttribute` on `currentChild`\n\t\t\t\t\t// changes `currentAttributes`.\n\t\t\t\t\twhile ( ii-- ) {\n\t\t\t\t\t\tconst { name } = currentAttributes[ ii ];\n\n\t\t\t\t\t\tif ( ! futureChild.getAttribute( name ) ) {\n\t\t\t\t\t\t\tcurrentChild.removeAttribute( name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( futureAttributes ) {\n\t\t\t\t\tfor ( let ii = 0; ii < futureAttributes.length; ii++ ) {\n\t\t\t\t\t\tconst { name, value } = futureAttributes[ ii ];\n\n\t\t\t\t\t\tif ( currentChild.getAttribute( name ) !== value ) {\n\t\t\t\t\t\t\tcurrentChild.setAttribute( name, value );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tapplyValue( futureChild, currentChild );\n\t\t\t\tfuture.removeChild( futureChild );\n\t\t\t}\n\t\t} else {\n\t\t\tfuture.removeChild( futureChild );\n\t\t}\n\n\t\ti++;\n\t}\n\n\twhile ( current.childNodes[ i ] ) {\n\t\tcurrent.removeChild( current.childNodes[ i ] );\n\t}\n}\n\n/**\n * Returns true if two ranges are equal, or false otherwise. Ranges are\n * considered equal if their start and end occur in the same container and\n * offset.\n *\n * @param {Range} a First range object to test.\n * @param {Range} b First range object to test.\n *\n * @return {boolean} Whether the two ranges are equal.\n */\nfunction isRangeEqual( a, b ) {\n\treturn (\n\t\ta.startContainer === b.startContainer &&\n\t\ta.startOffset === b.startOffset &&\n\t\ta.endContainer === b.endContainer &&\n\t\ta.endOffset === b.endOffset\n\t);\n}\n\nexport function applySelection( { startPath, endPath }, current ) {\n\tconst { node: startContainer, offset: startOffset } = getNodeByPath( current, startPath );\n\tconst { node: endContainer, offset: endOffset } = getNodeByPath( current, endPath );\n\tconst selection = window.getSelection();\n\tconst { ownerDocument } = current;\n\tconst range = ownerDocument.createRange();\n\n\trange.setStart( startContainer, startOffset );\n\trange.setEnd( endContainer, endOffset );\n\n\t// Set back focus if focus is lost.\n\tif ( ownerDocument.activeElement !== current ) {\n\t\tcurrent.focus();\n\t}\n\n\tif ( selection.rangeCount > 0 ) {\n\t\t// If the to be added range and the live range are the same, there's no\n\t\t// need to remove the live range and add the equivalent range.\n\t\tif ( isRangeEqual( range, selection.getRangeAt( 0 ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tselection.removeAllRanges();\n\t}\n\n\tselection.addRange( range );\n}\n","/**\n * WordPress dependencies\n */\n\nimport {\n\tescapeHTML,\n\tescapeAttribute,\n\tisValidAttributeName,\n} from '@wordpress/escape-html';\n\n/**\n * Internal dependencies\n */\n\nimport { toTree } from './to-tree';\n\n/**\n * Create an HTML string from a Rich Text value. If a `multilineTag` is\n * provided, text separated by a line separator will be wrapped in it.\n *\n * @param {Object} $1                        Named argements.\n * @param {Object} $1.value                  Rich text value.\n * @param {string} [$1.multilineTag]         Multiline tag.\n *\n * @return {string} HTML string.\n */\nexport function toHTMLString( { value, multilineTag } ) {\n\tconst tree = toTree( {\n\t\tvalue,\n\t\tmultilineTag,\n\t\tcreateEmpty,\n\t\tappend,\n\t\tgetLastChild,\n\t\tgetParent,\n\t\tisText,\n\t\tgetText,\n\t\tremove,\n\t\tappendText,\n\t} );\n\n\treturn createChildrenHTML( tree.children );\n}\n\nfunction createEmpty() {\n\treturn {};\n}\n\nfunction getLastChild( { children } ) {\n\treturn children && children[ children.length - 1 ];\n}\n\nfunction append( parent, object ) {\n\tif ( typeof object === 'string' ) {\n\t\tobject = { text: object };\n\t}\n\n\tobject.parent = parent;\n\tparent.children = parent.children || [];\n\tparent.children.push( object );\n\treturn object;\n}\n\nfunction appendText( object, text ) {\n\tobject.text += text;\n}\n\nfunction getParent( { parent } ) {\n\treturn parent;\n}\n\nfunction isText( { text } ) {\n\treturn typeof text === 'string';\n}\n\nfunction getText( { text } ) {\n\treturn text;\n}\n\nfunction remove( object ) {\n\tconst index = object.parent.children.indexOf( object );\n\n\tif ( index !== -1 ) {\n\t\tobject.parent.children.splice( index, 1 );\n\t}\n\n\treturn object;\n}\n\nfunction createElementHTML( { type, attributes, object, children } ) {\n\tlet attributeString = '';\n\n\tfor ( const key in attributes ) {\n\t\tif ( ! isValidAttributeName( key ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tattributeString += ` ${ key }=\"${ escapeAttribute( attributes[ key ] ) }\"`;\n\t}\n\n\tif ( object ) {\n\t\treturn `<${ type }${ attributeString }>`;\n\t}\n\n\treturn `<${ type }${ attributeString }>${ createChildrenHTML( children ) }</${ type }>`;\n}\n\nfunction createChildrenHTML( children = [] ) {\n\treturn children.map( ( child ) => {\n\t\treturn child.text === undefined ? createElementHTML( child ) : escapeHTML( child.text );\n\t} ).join( '' );\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormats } from './get-active-formats';\nimport { getFormatType } from './get-format-type';\nimport {\n\tLINE_SEPARATOR,\n\tOBJECT_REPLACEMENT_CHARACTER,\n\tZWNBSP,\n} from './special-characters';\n\n/**\n * Converts a format object to information that can be used to create an element\n * from (type, attributes and object).\n *\n * @param  {Object}  $1                        Named parameters.\n * @param  {string}  $1.type                   The format type.\n * @param  {Object}  $1.attributes             The format attributes.\n * @param  {Object}  $1.unregisteredAttributes The unregistered format\n *                                             attributes.\n * @param  {boolean} $1.object                 Wether or not it is an object\n *                                             format.\n * @param  {boolean} $1.boundaryClass          Wether or not to apply a boundary\n *                                             class.\n * @return {Object}                            Information to be used for\n *                                             element creation.\n */\nfunction fromFormat( { type, attributes, unregisteredAttributes, object, boundaryClass } ) {\n\tconst formatType = getFormatType( type );\n\n\tlet elementAttributes = {};\n\n\tif ( boundaryClass ) {\n\t\telementAttributes[ 'data-rich-text-format-boundary' ] = 'true';\n\t}\n\n\tif ( ! formatType ) {\n\t\tif ( attributes ) {\n\t\t\telementAttributes = { ...attributes, ...elementAttributes };\n\t\t}\n\n\t\treturn { type, attributes: elementAttributes, object };\n\t}\n\n\telementAttributes = { ...unregisteredAttributes, ...elementAttributes };\n\n\tfor ( const name in attributes ) {\n\t\tconst key = formatType.attributes ? formatType.attributes[ name ] : false;\n\n\t\tif ( key ) {\n\t\t\telementAttributes[ key ] = attributes[ name ];\n\t\t} else {\n\t\t\telementAttributes[ name ] = attributes[ name ];\n\t\t}\n\t}\n\n\tif ( formatType.className ) {\n\t\tif ( elementAttributes.class ) {\n\t\t\telementAttributes.class = `${ formatType.className } ${ elementAttributes.class }`;\n\t\t} else {\n\t\t\telementAttributes.class = formatType.className;\n\t\t}\n\t}\n\n\treturn {\n\t\ttype: formatType.tagName,\n\t\tobject: formatType.object,\n\t\tattributes: elementAttributes,\n\t};\n}\n\nexport function toTree( {\n\tvalue,\n\tmultilineTag,\n\tcreateEmpty,\n\tappend,\n\tgetLastChild,\n\tgetParent,\n\tisText,\n\tgetText,\n\tremove,\n\tappendText,\n\tonStartIndex,\n\tonEndIndex,\n\tisEditableTree,\n\tplaceholder,\n} ) {\n\tconst { formats, replacements, text, start, end } = value;\n\tconst formatsLength = formats.length + 1;\n\tconst tree = createEmpty();\n\tconst multilineFormat = { type: multilineTag };\n\tconst activeFormats = getActiveFormats( value );\n\tconst deepestActiveFormat = activeFormats[ activeFormats.length - 1 ];\n\n\tlet lastSeparatorFormats;\n\tlet lastCharacterFormats;\n\tlet lastCharacter;\n\n\t// If we're building a multiline tree, start off with a multiline element.\n\tif ( multilineTag ) {\n\t\tappend( append( tree, { type: multilineTag } ), '' );\n\t\tlastCharacterFormats = lastSeparatorFormats = [ multilineFormat ];\n\t} else {\n\t\tappend( tree, '' );\n\t}\n\n\tfor ( let i = 0; i < formatsLength; i++ ) {\n\t\tconst character = text.charAt( i );\n\t\tconst shouldInsertPadding = isEditableTree && (\n\t\t\t// Pad the line if the line is empty.\n\t\t\t! lastCharacter ||\n\t\t\tlastCharacter === LINE_SEPARATOR ||\n\t\t\t// Pad the line if the previous character is a line break, otherwise\n\t\t\t// the line break won't be visible.\n\t\t\tlastCharacter === '\\n'\n\t\t);\n\n\t\tlet characterFormats = formats[ i ];\n\n\t\t// Set multiline tags in queue for building the tree.\n\t\tif ( multilineTag ) {\n\t\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\t\tcharacterFormats = lastSeparatorFormats = ( replacements[ i ] || [] ).reduce( ( accumulator, format ) => {\n\t\t\t\t\taccumulator.push( format, multilineFormat );\n\t\t\t\t\treturn accumulator;\n\t\t\t\t}, [ multilineFormat ] );\n\t\t\t} else {\n\t\t\t\tcharacterFormats = [ ...lastSeparatorFormats, ...( characterFormats || [] ) ];\n\t\t\t}\n\t\t}\n\n\t\tlet pointer = getLastChild( tree );\n\n\t\tif ( shouldInsertPadding && character === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tappend( getParent( node ), ZWNBSP );\n\t\t}\n\n\t\t// Set selection for the start of line.\n\t\tif ( lastCharacter === LINE_SEPARATOR ) {\n\t\t\tlet node = pointer;\n\n\t\t\twhile ( ! isText( node ) ) {\n\t\t\t\tnode = getLastChild( node );\n\t\t\t}\n\n\t\t\tif ( onStartIndex && start === i ) {\n\t\t\t\tonStartIndex( tree, node );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === i ) {\n\t\t\t\tonEndIndex( tree, node );\n\t\t\t}\n\t\t}\n\n\t\tif ( characterFormats ) {\n\t\t\tcharacterFormats.forEach( ( format, formatIndex ) => {\n\t\t\t\tif (\n\t\t\t\t\tpointer &&\n\t\t\t\t\tlastCharacterFormats &&\n\t\t\t\t\tformat === lastCharacterFormats[ formatIndex ] &&\n\t\t\t\t\t// Do not reuse the last element if the character is a\n\t\t\t\t\t// line separator.\n\t\t\t\t\t( character !== LINE_SEPARATOR ||\n\t\t\t\t\t\tcharacterFormats.length - 1 !== formatIndex )\n\t\t\t\t) {\n\t\t\t\t\tpointer = getLastChild( pointer );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { type, attributes, unregisteredAttributes } = format;\n\n\t\t\t\tconst boundaryClass = (\n\t\t\t\t\tisEditableTree &&\n\t\t\t\t\tcharacter !== LINE_SEPARATOR &&\n\t\t\t\t\tformat === deepestActiveFormat\n\t\t\t\t);\n\n\t\t\t\tconst parent = getParent( pointer );\n\t\t\t\tconst newNode = append( parent, fromFormat( {\n\t\t\t\t\ttype,\n\t\t\t\t\tattributes,\n\t\t\t\t\tunregisteredAttributes,\n\t\t\t\t\tboundaryClass,\n\t\t\t\t} ) );\n\n\t\t\t\tif ( isText( pointer ) && getText( pointer ).length === 0 ) {\n\t\t\t\t\tremove( pointer );\n\t\t\t\t}\n\n\t\t\t\tpointer = append( newNode, '' );\n\t\t\t} );\n\t\t}\n\n\t\t// No need for further processing if the character is a line separator.\n\t\tif ( character === LINE_SEPARATOR ) {\n\t\t\tlastCharacterFormats = characterFormats;\n\t\t\tlastCharacter = character;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If there is selection at 0, handle it before characters are inserted.\n\t\tif ( i === 0 ) {\n\t\t\tif ( onStartIndex && start === 0 ) {\n\t\t\t\tonStartIndex( tree, pointer );\n\t\t\t}\n\n\t\t\tif ( onEndIndex && end === 0 ) {\n\t\t\t\tonEndIndex( tree, pointer );\n\t\t\t}\n\t\t}\n\n\t\tif ( character === OBJECT_REPLACEMENT_CHARACTER ) {\n\t\t\tpointer = append( getParent( pointer ), fromFormat( {\n\t\t\t\t...replacements[ i ],\n\t\t\t\tobject: true,\n\t\t\t} ) );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( character === '\\n' ) {\n\t\t\tpointer = append( getParent( pointer ), {\n\t\t\t\ttype: 'br',\n\t\t\t\tattributes: isEditableTree ? {\n\t\t\t\t\t'data-rich-text-line-break': 'true',\n\t\t\t\t} : undefined,\n\t\t\t\tobject: true,\n\t\t\t} );\n\t\t\t// Ensure pointer is text node.\n\t\t\tpointer = append( getParent( pointer ), '' );\n\t\t} else if ( ! isText( pointer ) ) {\n\t\t\tpointer = append( getParent( pointer ), character );\n\t\t} else {\n\t\t\tappendText( pointer, character );\n\t\t}\n\n\t\tif ( onStartIndex && start === i + 1 ) {\n\t\t\tonStartIndex( tree, pointer );\n\t\t}\n\n\t\tif ( onEndIndex && end === i + 1 ) {\n\t\t\tonEndIndex( tree, pointer );\n\t\t}\n\n\t\tif ( shouldInsertPadding && i === text.length ) {\n\t\t\tappend( getParent( pointer ), ZWNBSP );\n\n\t\t\tif ( placeholder && text.length === 0 ) {\n\t\t\t\tappend( getParent( pointer ), {\n\t\t\t\t\ttype: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-rich-text-placeholder': placeholder,\n\t\t\t\t\t\t// Necessary to prevent the placeholder from catching\n\t\t\t\t\t\t// selection. The placeholder is also not editable after\n\t\t\t\t\t\t// all.\n\t\t\t\t\t\tcontenteditable: 'false',\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\tlastCharacterFormats = characterFormats;\n\t\tlastCharacter = character;\n\t}\n\n\treturn tree;\n}\n","/**\n * Internal dependencies\n */\n\nimport { getActiveFormat } from './get-active-format';\nimport { removeFormat } from './remove-format';\nimport { applyFormat } from './apply-format';\n\n/**\n * Toggles a format object to a Rich Text value at the current selection.\n *\n * @param {Object} value  Value to modify.\n * @param {Object} format Format to apply or remove.\n *\n * @return {Object} A new value with the format applied or removed.\n */\nexport function toggleFormat( value, format ) {\n\tif ( getActiveFormat( value, format.type ) ) {\n\t\treturn removeFormat( value, format.type );\n\t}\n\n\treturn applyFormat( value, format );\n}\n","/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\nimport { removeFilter } from '@wordpress/hooks';\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {WPFormat|undefined} The previous format value, if it has been successfully\n *                              unregistered; otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( 'core/rich-text' ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error(\n\t\t\t`Format ${ name } is not registered.`\n\t\t);\n\t\treturn;\n\t}\n\n\tif ( oldFormat.__experimentalCreatePrepareEditableTree ) {\n\t\tremoveFilter( 'experimentalRichText', name );\n\t}\n\n\tdispatch( 'core/rich-text' ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n","/**\n * Internal dependencies\n */\n\nimport { isFormatEqual } from './is-format-equal';\n\n/**\n * Efficiently updates all the formats from `start` (including) until `end`\n * (excluding) with the active formats. Mutates `value`.\n *\n * @param  {Object} $1         Named paramentes.\n * @param  {Object} $1.value   Value te update.\n * @param  {number} $1.start   Index to update from.\n * @param  {number} $1.end     Index to update until.\n * @param  {Array}  $1.formats Replacement formats.\n *\n * @return {Object} Mutated value.\n */\nexport function updateFormats( { value, start, end, formats } ) {\n\tconst formatsBefore = value.formats[ start - 1 ] || [];\n\tconst formatsAfter = value.formats[ end ] || [];\n\n\t// First, fix the references. If any format right before or after are\n\t// equal, the replacement format should use the same reference.\n\tvalue.activeFormats = formats.map( ( format, index ) => {\n\t\tif ( formatsBefore[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsBefore[ index ] ) ) {\n\t\t\t\treturn formatsBefore[ index ];\n\t\t\t}\n\t\t} else if ( formatsAfter[ index ] ) {\n\t\t\tif ( isFormatEqual( format, formatsAfter[ index ] ) ) {\n\t\t\t\treturn formatsAfter[ index ];\n\t\t\t}\n\t\t}\n\n\t\treturn format;\n\t} );\n\n\twhile ( --end >= start ) {\n\t\tif ( value.activeFormats.length > 0 ) {\n\t\t\tvalue.formats[ end ] = value.activeFormats;\n\t\t} else {\n\t\t\tdelete value.formats[ end ];\n\t\t}\n\t}\n\n\treturn value;\n}\n","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"deprecated\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"escapeHtml\"]; }());","(function() { module.exports = this[\"wp\"][\"hooks\"]; }());","(function() { module.exports = this[\"wp\"][\"isShallowEqual\"]; }());","(function() { module.exports = this[\"wp\"][\"keycodes\"]; }());","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}